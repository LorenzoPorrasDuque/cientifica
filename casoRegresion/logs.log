2024-10-17 18:37:02,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-17 18:37:02,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-17 18:37:02,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-17 18:37:02,167:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-10-17 18:37:07,785:INFO:PyCaret RegressionExperiment
2024-10-17 18:37:07,785:INFO:Logging name: charges_model
2024-10-17 18:37:07,785:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-17 18:37:07,785:INFO:version 3.3.2
2024-10-17 18:37:07,785:INFO:Initializing setup()
2024-10-17 18:37:07,785:INFO:self.USI: cad6
2024-10-17 18:37:07,785:INFO:self._variable_keys: {'seed', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', '_available_plots', 'log_plots_param', 'fold_groups_param', 'idx', 'data', 'fold_generator', 'USI', '_ml_usecase', 'html_param', 'y', 'target_param', 'exp_name_log', 'y_test', 'gpu_param', 'exp_id', 'y_train', 'fold_shuffle_param', 'logging_param', 'X_test', 'memory', 'X_train', 'n_jobs_param'}
2024-10-17 18:37:07,785:INFO:Checking environment
2024-10-17 18:37:07,785:INFO:python_version: 3.10.10
2024-10-17 18:37:07,785:INFO:python_build: ('tags/v3.10.10:aad5f6a', 'Feb  7 2023 17:20:36')
2024-10-17 18:37:07,785:INFO:machine: AMD64
2024-10-17 18:37:07,785:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-17 18:37:07,787:INFO:Memory: svmem(total=34175172608, available=21342609408, percent=37.5, used=12832563200, free=21342609408)
2024-10-17 18:37:07,787:INFO:Physical Core: 16
2024-10-17 18:37:07,787:INFO:Logical Core: 24
2024-10-17 18:37:07,787:INFO:Checking libraries
2024-10-17 18:37:07,787:INFO:System:
2024-10-17 18:37:07,787:INFO:    python: 3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)]
2024-10-17 18:37:07,787:INFO:executable: c:\Users\Anime\Desktop\cientifica\.venv\Scripts\python.exe
2024-10-17 18:37:07,787:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-17 18:37:07,787:INFO:PyCaret required dependencies:
2024-10-17 18:37:07,802:INFO:                 pip: 24.2
2024-10-17 18:37:07,802:INFO:          setuptools: 65.5.0
2024-10-17 18:37:07,802:INFO:             pycaret: 3.3.2
2024-10-17 18:37:07,803:INFO:             IPython: 8.28.0
2024-10-17 18:37:07,803:INFO:          ipywidgets: 8.1.5
2024-10-17 18:37:07,803:INFO:                tqdm: 4.66.5
2024-10-17 18:37:07,803:INFO:               numpy: 1.26.4
2024-10-17 18:37:07,803:INFO:              pandas: 2.1.4
2024-10-17 18:37:07,803:INFO:              jinja2: 3.1.4
2024-10-17 18:37:07,803:INFO:               scipy: 1.11.4
2024-10-17 18:37:07,803:INFO:              joblib: 1.3.2
2024-10-17 18:37:07,803:INFO:             sklearn: 1.4.2
2024-10-17 18:37:07,803:INFO:                pyod: 2.0.2
2024-10-17 18:37:07,803:INFO:            imblearn: 0.12.4
2024-10-17 18:37:07,803:INFO:   category_encoders: 2.6.4
2024-10-17 18:37:07,803:INFO:            lightgbm: 4.5.0
2024-10-17 18:37:07,803:INFO:               numba: 0.60.0
2024-10-17 18:37:07,803:INFO:            requests: 2.32.3
2024-10-17 18:37:07,803:INFO:          matplotlib: 3.7.5
2024-10-17 18:37:07,803:INFO:          scikitplot: 0.3.7
2024-10-17 18:37:07,803:INFO:         yellowbrick: 1.5
2024-10-17 18:37:07,803:INFO:              plotly: 5.24.1
2024-10-17 18:37:07,803:INFO:    plotly-resampler: Not installed
2024-10-17 18:37:07,803:INFO:             kaleido: 0.2.1
2024-10-17 18:37:07,803:INFO:           schemdraw: 0.15
2024-10-17 18:37:07,803:INFO:         statsmodels: 0.14.4
2024-10-17 18:37:07,803:INFO:              sktime: 0.26.0
2024-10-17 18:37:07,803:INFO:               tbats: 1.1.3
2024-10-17 18:37:07,803:INFO:            pmdarima: 2.0.4
2024-10-17 18:37:07,803:INFO:              psutil: 6.0.0
2024-10-17 18:37:07,803:INFO:          markupsafe: 2.1.5
2024-10-17 18:37:07,803:INFO:             pickle5: Not installed
2024-10-17 18:37:07,803:INFO:         cloudpickle: 3.1.0
2024-10-17 18:37:07,803:INFO:         deprecation: 2.1.0
2024-10-17 18:37:07,803:INFO:              xxhash: 3.5.0
2024-10-17 18:37:07,803:INFO:           wurlitzer: Not installed
2024-10-17 18:37:07,803:INFO:PyCaret optional dependencies:
2024-10-17 18:37:08,994:INFO:                shap: Not installed
2024-10-17 18:37:08,995:INFO:           interpret: Not installed
2024-10-17 18:37:08,995:INFO:                umap: Not installed
2024-10-17 18:37:08,995:INFO:     ydata_profiling: 4.11.0
2024-10-17 18:37:08,995:INFO:  explainerdashboard: Not installed
2024-10-17 18:37:08,995:INFO:             autoviz: Not installed
2024-10-17 18:37:08,995:INFO:           fairlearn: Not installed
2024-10-17 18:37:08,995:INFO:          deepchecks: Not installed
2024-10-17 18:37:08,995:INFO:             xgboost: Not installed
2024-10-17 18:37:08,995:INFO:            catboost: Not installed
2024-10-17 18:37:08,995:INFO:              kmodes: Not installed
2024-10-17 18:37:08,995:INFO:             mlxtend: Not installed
2024-10-17 18:37:08,995:INFO:       statsforecast: Not installed
2024-10-17 18:37:08,995:INFO:        tune_sklearn: Not installed
2024-10-17 18:37:08,995:INFO:                 ray: Not installed
2024-10-17 18:37:08,995:INFO:            hyperopt: Not installed
2024-10-17 18:37:08,995:INFO:              optuna: Not installed
2024-10-17 18:37:08,995:INFO:               skopt: Not installed
2024-10-17 18:37:08,995:INFO:              mlflow: 2.17.0
2024-10-17 18:37:08,995:INFO:              gradio: 5.1.0
2024-10-17 18:37:08,995:INFO:             fastapi: 0.115.2
2024-10-17 18:37:08,995:INFO:             uvicorn: 0.32.0
2024-10-17 18:37:08,995:INFO:              m2cgen: Not installed
2024-10-17 18:37:08,995:INFO:           evidently: Not installed
2024-10-17 18:37:08,995:INFO:               fugue: Not installed
2024-10-17 18:37:08,995:INFO:           streamlit: Not installed
2024-10-17 18:37:08,995:INFO:             prophet: Not installed
2024-10-17 18:37:08,995:INFO:None
2024-10-17 18:37:08,995:INFO:Set up data.
2024-10-17 18:37:08,999:INFO:Set up folding strategy.
2024-10-17 18:37:08,999:INFO:Set up train/test split.
2024-10-17 18:37:09,000:INFO:Set up index.
2024-10-17 18:37:09,001:INFO:Assigning column types.
2024-10-17 18:37:09,002:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-17 18:37:09,002:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,004:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,006:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,055:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,057:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,059:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,086:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,107:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,107:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-17 18:37:09,109:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,111:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,138:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,158:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,158:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,160:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,163:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,209:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,209:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,209:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-17 18:37:09,213:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,239:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,259:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,264:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,312:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-17 18:37:09,341:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,362:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,362:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,393:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,413:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,414:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-17 18:37:09,444:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,465:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,465:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,494:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:37:09,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,516:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-17 18:37:09,568:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,620:INFO:Preparing preprocessing pipeline...
2024-10-17 18:37:09,620:INFO:Set up simple imputation.
2024-10-17 18:37:09,621:INFO:Set up encoding of ordinal features.
2024-10-17 18:37:09,622:INFO:Set up encoding of categorical features.
2024-10-17 18:37:09,622:INFO:Set up removing multicollinearity.
2024-10-17 18:37:09,622:INFO:Set up column transformation.
2024-10-17 18:37:09,622:INFO:Set up feature normalization.
2024-10-17 18:37:09,672:INFO:Finished creating preprocessing pipeline.
2024-10-17 18:37:09,684:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:37:09,684:INFO:Creating final display dataframe.
2024-10-17 18:37:09,795:INFO:Setup _display_container:                     Description          Value
0                    Session id            123
1                        Target        charges
2                   Target type     Regression
3           Original data shape      (1204, 7)
4        Transformed data shape      (1204, 8)
5   Transformed train set shape       (842, 8)
6    Transformed test set shape       (362, 8)
7               Ignore features              2
8              Numeric features              2
9          Categorical features              2
10                   Preprocess           True
11              Imputation type         simple
12           Numeric imputation           mean
13       Categorical imputation           mode
14     Maximum one-hot encoding             25
15              Encoding method           None
16     Remove multicollinearity           True
17  Multicollinearity threshold            0.9
18               Transformation           True
19        Transformation method    yeo-johnson
20                    Normalize           True
21             Normalize method         zscore
22               Fold Generator          KFold
23                  Fold Number             10
24                     CPU Jobs             -1
25                      Use GPU          False
26               Log Experiment   MlflowLogger
27              Experiment Name  charges_model
28                          USI           cad6
2024-10-17 18:37:09,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:37:09,903:INFO:Logging experiment in loggers
2024-10-17 18:37:10,070:INFO:SubProcess save_model() called ==================================
2024-10-17 18:37:10,091:INFO:Initializing save_model()
2024-10-17 18:37:10,091:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), model_name=C:\Users\Anime\AppData\Local\Temp\tmpiajtokma\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-17 18:37:10,091:INFO:Adding model into prep_pipe
2024-10-17 18:37:10,091:WARNING:Only Model saved as it was a pipeline.
2024-10-17 18:37:10,094:INFO:C:\Users\Anime\AppData\Local\Temp\tmpiajtokma\Transformation Pipeline.pkl saved in current working directory
2024-10-17 18:37:10,104:INFO:Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:37:10,104:INFO:save_model() successfully completed......................................
2024-10-17 18:37:10,198:INFO:SubProcess save_model() end ==================================
2024-10-17 18:37:10,232:INFO:setup() successfully completed in 2.12s...............
2024-10-17 18:37:14,042:INFO:Initializing compare_models()
2024-10-17 18:37:14,043:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-10-17 18:37:14,043:INFO:Checking exceptions
2024-10-17 18:37:14,044:INFO:Preparing display monitor
2024-10-17 18:37:14,061:INFO:Initializing Linear Regression
2024-10-17 18:37:14,061:INFO:Total runtime is 0.0 minutes
2024-10-17 18:37:14,065:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:14,065:INFO:Initializing create_model()
2024-10-17 18:37:14,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:14,065:INFO:Checking exceptions
2024-10-17 18:37:14,065:INFO:Importing libraries
2024-10-17 18:37:14,065:INFO:Copying training dataset
2024-10-17 18:37:14,068:INFO:Defining folds
2024-10-17 18:37:14,068:INFO:Declaring metric variables
2024-10-17 18:37:14,070:INFO:Importing untrained model
2024-10-17 18:37:14,073:INFO:Linear Regression Imported successfully
2024-10-17 18:37:14,080:INFO:Starting cross validation
2024-10-17 18:37:14,085:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:16,158:INFO:Calculating mean and std
2024-10-17 18:37:16,159:INFO:Creating metrics dataframe
2024-10-17 18:37:16,160:INFO:Uploading results into container
2024-10-17 18:37:16,160:INFO:Uploading model into container now
2024-10-17 18:37:16,161:INFO:_master_model_container: 1
2024-10-17 18:37:16,161:INFO:_display_container: 2
2024-10-17 18:37:16,161:INFO:LinearRegression(n_jobs=-1)
2024-10-17 18:37:16,161:INFO:create_model() successfully completed......................................
2024-10-17 18:37:16,248:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:16,248:INFO:Creating metrics dataframe
2024-10-17 18:37:16,252:INFO:Initializing Lasso Regression
2024-10-17 18:37:16,252:INFO:Total runtime is 0.036516729990641275 minutes
2024-10-17 18:37:16,254:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:16,254:INFO:Initializing create_model()
2024-10-17 18:37:16,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:16,254:INFO:Checking exceptions
2024-10-17 18:37:16,254:INFO:Importing libraries
2024-10-17 18:37:16,254:INFO:Copying training dataset
2024-10-17 18:37:16,256:INFO:Defining folds
2024-10-17 18:37:16,256:INFO:Declaring metric variables
2024-10-17 18:37:16,258:INFO:Importing untrained model
2024-10-17 18:37:16,259:INFO:Lasso Regression Imported successfully
2024-10-17 18:37:16,263:INFO:Starting cross validation
2024-10-17 18:37:16,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:17,905:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.884e+07, tolerance: 1.041e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:37:17,968:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.735e+07, tolerance: 9.792e+06
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:37:17,995:INFO:Calculating mean and std
2024-10-17 18:37:17,995:INFO:Creating metrics dataframe
2024-10-17 18:37:17,997:INFO:Uploading results into container
2024-10-17 18:37:17,997:INFO:Uploading model into container now
2024-10-17 18:37:17,998:INFO:_master_model_container: 2
2024-10-17 18:37:17,998:INFO:_display_container: 2
2024-10-17 18:37:17,998:INFO:Lasso(random_state=123)
2024-10-17 18:37:17,998:INFO:create_model() successfully completed......................................
2024-10-17 18:37:18,087:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:18,088:INFO:Creating metrics dataframe
2024-10-17 18:37:18,092:INFO:Initializing Ridge Regression
2024-10-17 18:37:18,092:INFO:Total runtime is 0.06718380451202392 minutes
2024-10-17 18:37:18,093:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:18,094:INFO:Initializing create_model()
2024-10-17 18:37:18,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:18,094:INFO:Checking exceptions
2024-10-17 18:37:18,094:INFO:Importing libraries
2024-10-17 18:37:18,094:INFO:Copying training dataset
2024-10-17 18:37:18,096:INFO:Defining folds
2024-10-17 18:37:18,096:INFO:Declaring metric variables
2024-10-17 18:37:18,097:INFO:Importing untrained model
2024-10-17 18:37:18,099:INFO:Ridge Regression Imported successfully
2024-10-17 18:37:18,103:INFO:Starting cross validation
2024-10-17 18:37:18,104:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:19,421:INFO:Calculating mean and std
2024-10-17 18:37:19,421:INFO:Creating metrics dataframe
2024-10-17 18:37:19,423:INFO:Uploading results into container
2024-10-17 18:37:19,424:INFO:Uploading model into container now
2024-10-17 18:37:19,424:INFO:_master_model_container: 3
2024-10-17 18:37:19,424:INFO:_display_container: 2
2024-10-17 18:37:19,425:INFO:Ridge(random_state=123)
2024-10-17 18:37:19,425:INFO:create_model() successfully completed......................................
2024-10-17 18:37:19,521:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:19,521:INFO:Creating metrics dataframe
2024-10-17 18:37:19,524:INFO:Initializing Elastic Net
2024-10-17 18:37:19,525:INFO:Total runtime is 0.09107897281646729 minutes
2024-10-17 18:37:19,527:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:19,527:INFO:Initializing create_model()
2024-10-17 18:37:19,527:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:19,527:INFO:Checking exceptions
2024-10-17 18:37:19,527:INFO:Importing libraries
2024-10-17 18:37:19,527:INFO:Copying training dataset
2024-10-17 18:37:19,529:INFO:Defining folds
2024-10-17 18:37:19,529:INFO:Declaring metric variables
2024-10-17 18:37:19,533:INFO:Importing untrained model
2024-10-17 18:37:19,536:INFO:Elastic Net Imported successfully
2024-10-17 18:37:19,541:INFO:Starting cross validation
2024-10-17 18:37:19,542:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:19,639:INFO:Calculating mean and std
2024-10-17 18:37:19,639:INFO:Creating metrics dataframe
2024-10-17 18:37:19,640:INFO:Uploading results into container
2024-10-17 18:37:19,641:INFO:Uploading model into container now
2024-10-17 18:37:19,641:INFO:_master_model_container: 4
2024-10-17 18:37:19,641:INFO:_display_container: 2
2024-10-17 18:37:19,641:INFO:ElasticNet(random_state=123)
2024-10-17 18:37:19,641:INFO:create_model() successfully completed......................................
2024-10-17 18:37:19,728:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:19,728:INFO:Creating metrics dataframe
2024-10-17 18:37:19,732:INFO:Initializing Least Angle Regression
2024-10-17 18:37:19,732:INFO:Total runtime is 0.09452654123306276 minutes
2024-10-17 18:37:19,734:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:19,734:INFO:Initializing create_model()
2024-10-17 18:37:19,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:19,735:INFO:Checking exceptions
2024-10-17 18:37:19,735:INFO:Importing libraries
2024-10-17 18:37:19,735:INFO:Copying training dataset
2024-10-17 18:37:19,736:INFO:Defining folds
2024-10-17 18:37:19,736:INFO:Declaring metric variables
2024-10-17 18:37:19,738:INFO:Importing untrained model
2024-10-17 18:37:19,740:INFO:Least Angle Regression Imported successfully
2024-10-17 18:37:19,745:INFO:Starting cross validation
2024-10-17 18:37:19,747:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:19,836:INFO:Calculating mean and std
2024-10-17 18:37:19,836:INFO:Creating metrics dataframe
2024-10-17 18:37:19,837:INFO:Uploading results into container
2024-10-17 18:37:19,837:INFO:Uploading model into container now
2024-10-17 18:37:19,838:INFO:_master_model_container: 5
2024-10-17 18:37:19,838:INFO:_display_container: 2
2024-10-17 18:37:19,838:INFO:Lars(random_state=123)
2024-10-17 18:37:19,838:INFO:create_model() successfully completed......................................
2024-10-17 18:37:19,929:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:19,929:INFO:Creating metrics dataframe
2024-10-17 18:37:19,933:INFO:Initializing Lasso Least Angle Regression
2024-10-17 18:37:19,933:INFO:Total runtime is 0.09786535501480104 minutes
2024-10-17 18:37:19,935:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:19,935:INFO:Initializing create_model()
2024-10-17 18:37:19,935:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:19,935:INFO:Checking exceptions
2024-10-17 18:37:19,935:INFO:Importing libraries
2024-10-17 18:37:19,935:INFO:Copying training dataset
2024-10-17 18:37:19,937:INFO:Defining folds
2024-10-17 18:37:19,937:INFO:Declaring metric variables
2024-10-17 18:37:19,939:INFO:Importing untrained model
2024-10-17 18:37:19,941:INFO:Lasso Least Angle Regression Imported successfully
2024-10-17 18:37:19,946:INFO:Starting cross validation
2024-10-17 18:37:19,947:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:20,049:INFO:Calculating mean and std
2024-10-17 18:37:20,050:INFO:Creating metrics dataframe
2024-10-17 18:37:20,051:INFO:Uploading results into container
2024-10-17 18:37:20,051:INFO:Uploading model into container now
2024-10-17 18:37:20,052:INFO:_master_model_container: 6
2024-10-17 18:37:20,052:INFO:_display_container: 2
2024-10-17 18:37:20,052:INFO:LassoLars(random_state=123)
2024-10-17 18:37:20,052:INFO:create_model() successfully completed......................................
2024-10-17 18:37:20,139:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:20,139:INFO:Creating metrics dataframe
2024-10-17 18:37:20,143:INFO:Initializing Orthogonal Matching Pursuit
2024-10-17 18:37:20,143:INFO:Total runtime is 0.10137031078338624 minutes
2024-10-17 18:37:20,145:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:20,145:INFO:Initializing create_model()
2024-10-17 18:37:20,145:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:20,145:INFO:Checking exceptions
2024-10-17 18:37:20,145:INFO:Importing libraries
2024-10-17 18:37:20,146:INFO:Copying training dataset
2024-10-17 18:37:20,147:INFO:Defining folds
2024-10-17 18:37:20,147:INFO:Declaring metric variables
2024-10-17 18:37:20,149:INFO:Importing untrained model
2024-10-17 18:37:20,151:INFO:Orthogonal Matching Pursuit Imported successfully
2024-10-17 18:37:20,155:INFO:Starting cross validation
2024-10-17 18:37:20,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:20,262:INFO:Calculating mean and std
2024-10-17 18:37:20,262:INFO:Creating metrics dataframe
2024-10-17 18:37:20,263:INFO:Uploading results into container
2024-10-17 18:37:20,264:INFO:Uploading model into container now
2024-10-17 18:37:20,264:INFO:_master_model_container: 7
2024-10-17 18:37:20,264:INFO:_display_container: 2
2024-10-17 18:37:20,264:INFO:OrthogonalMatchingPursuit()
2024-10-17 18:37:20,264:INFO:create_model() successfully completed......................................
2024-10-17 18:37:20,351:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:20,351:INFO:Creating metrics dataframe
2024-10-17 18:37:20,355:INFO:Initializing Bayesian Ridge
2024-10-17 18:37:20,355:INFO:Total runtime is 0.10490906238555908 minutes
2024-10-17 18:37:20,357:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:20,357:INFO:Initializing create_model()
2024-10-17 18:37:20,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:20,358:INFO:Checking exceptions
2024-10-17 18:37:20,358:INFO:Importing libraries
2024-10-17 18:37:20,358:INFO:Copying training dataset
2024-10-17 18:37:20,360:INFO:Defining folds
2024-10-17 18:37:20,360:INFO:Declaring metric variables
2024-10-17 18:37:20,363:INFO:Importing untrained model
2024-10-17 18:37:20,366:INFO:Bayesian Ridge Imported successfully
2024-10-17 18:37:20,370:INFO:Starting cross validation
2024-10-17 18:37:20,371:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:20,464:INFO:Calculating mean and std
2024-10-17 18:37:20,465:INFO:Creating metrics dataframe
2024-10-17 18:37:20,466:INFO:Uploading results into container
2024-10-17 18:37:20,466:INFO:Uploading model into container now
2024-10-17 18:37:20,467:INFO:_master_model_container: 8
2024-10-17 18:37:20,467:INFO:_display_container: 2
2024-10-17 18:37:20,467:INFO:BayesianRidge()
2024-10-17 18:37:20,467:INFO:create_model() successfully completed......................................
2024-10-17 18:37:20,554:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:20,554:INFO:Creating metrics dataframe
2024-10-17 18:37:20,559:INFO:Initializing Passive Aggressive Regressor
2024-10-17 18:37:20,559:INFO:Total runtime is 0.10830291906992594 minutes
2024-10-17 18:37:20,561:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:20,561:INFO:Initializing create_model()
2024-10-17 18:37:20,561:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:20,561:INFO:Checking exceptions
2024-10-17 18:37:20,561:INFO:Importing libraries
2024-10-17 18:37:20,561:INFO:Copying training dataset
2024-10-17 18:37:20,563:INFO:Defining folds
2024-10-17 18:37:20,563:INFO:Declaring metric variables
2024-10-17 18:37:20,565:INFO:Importing untrained model
2024-10-17 18:37:20,567:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:37:20,571:INFO:Starting cross validation
2024-10-17 18:37:20,572:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:20,665:INFO:Calculating mean and std
2024-10-17 18:37:20,665:INFO:Creating metrics dataframe
2024-10-17 18:37:20,666:INFO:Uploading results into container
2024-10-17 18:37:20,667:INFO:Uploading model into container now
2024-10-17 18:37:20,667:INFO:_master_model_container: 9
2024-10-17 18:37:20,667:INFO:_display_container: 2
2024-10-17 18:37:20,667:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:37:20,667:INFO:create_model() successfully completed......................................
2024-10-17 18:37:20,759:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:20,759:INFO:Creating metrics dataframe
2024-10-17 18:37:20,764:INFO:Initializing Huber Regressor
2024-10-17 18:37:20,764:INFO:Total runtime is 0.11172768672307332 minutes
2024-10-17 18:37:20,767:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:20,767:INFO:Initializing create_model()
2024-10-17 18:37:20,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:20,767:INFO:Checking exceptions
2024-10-17 18:37:20,767:INFO:Importing libraries
2024-10-17 18:37:20,767:INFO:Copying training dataset
2024-10-17 18:37:20,770:INFO:Defining folds
2024-10-17 18:37:20,770:INFO:Declaring metric variables
2024-10-17 18:37:20,772:INFO:Importing untrained model
2024-10-17 18:37:20,775:INFO:Huber Regressor Imported successfully
2024-10-17 18:37:20,779:INFO:Starting cross validation
2024-10-17 18:37:20,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:20,882:INFO:Calculating mean and std
2024-10-17 18:37:20,883:INFO:Creating metrics dataframe
2024-10-17 18:37:20,884:INFO:Uploading results into container
2024-10-17 18:37:20,884:INFO:Uploading model into container now
2024-10-17 18:37:20,884:INFO:_master_model_container: 10
2024-10-17 18:37:20,884:INFO:_display_container: 2
2024-10-17 18:37:20,885:INFO:HuberRegressor()
2024-10-17 18:37:20,885:INFO:create_model() successfully completed......................................
2024-10-17 18:37:20,977:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:20,977:INFO:Creating metrics dataframe
2024-10-17 18:37:20,982:INFO:Initializing K Neighbors Regressor
2024-10-17 18:37:20,982:INFO:Total runtime is 0.11535023848215738 minutes
2024-10-17 18:37:20,984:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:20,984:INFO:Initializing create_model()
2024-10-17 18:37:20,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:20,984:INFO:Checking exceptions
2024-10-17 18:37:20,984:INFO:Importing libraries
2024-10-17 18:37:20,984:INFO:Copying training dataset
2024-10-17 18:37:20,986:INFO:Defining folds
2024-10-17 18:37:20,986:INFO:Declaring metric variables
2024-10-17 18:37:20,989:INFO:Importing untrained model
2024-10-17 18:37:20,991:INFO:K Neighbors Regressor Imported successfully
2024-10-17 18:37:20,994:INFO:Starting cross validation
2024-10-17 18:37:20,996:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:21,141:INFO:Calculating mean and std
2024-10-17 18:37:21,142:INFO:Creating metrics dataframe
2024-10-17 18:37:21,143:INFO:Uploading results into container
2024-10-17 18:37:21,143:INFO:Uploading model into container now
2024-10-17 18:37:21,143:INFO:_master_model_container: 11
2024-10-17 18:37:21,143:INFO:_display_container: 2
2024-10-17 18:37:21,143:INFO:KNeighborsRegressor(n_jobs=-1)
2024-10-17 18:37:21,144:INFO:create_model() successfully completed......................................
2024-10-17 18:37:21,233:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:21,233:INFO:Creating metrics dataframe
2024-10-17 18:37:21,238:INFO:Initializing Decision Tree Regressor
2024-10-17 18:37:21,239:INFO:Total runtime is 0.11963591575622558 minutes
2024-10-17 18:37:21,241:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:21,241:INFO:Initializing create_model()
2024-10-17 18:37:21,241:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:21,241:INFO:Checking exceptions
2024-10-17 18:37:21,241:INFO:Importing libraries
2024-10-17 18:37:21,241:INFO:Copying training dataset
2024-10-17 18:37:21,243:INFO:Defining folds
2024-10-17 18:37:21,243:INFO:Declaring metric variables
2024-10-17 18:37:21,245:INFO:Importing untrained model
2024-10-17 18:37:21,248:INFO:Decision Tree Regressor Imported successfully
2024-10-17 18:37:21,253:INFO:Starting cross validation
2024-10-17 18:37:21,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:21,341:INFO:Calculating mean and std
2024-10-17 18:37:21,341:INFO:Creating metrics dataframe
2024-10-17 18:37:21,342:INFO:Uploading results into container
2024-10-17 18:37:21,342:INFO:Uploading model into container now
2024-10-17 18:37:21,343:INFO:_master_model_container: 12
2024-10-17 18:37:21,343:INFO:_display_container: 2
2024-10-17 18:37:21,343:INFO:DecisionTreeRegressor(random_state=123)
2024-10-17 18:37:21,343:INFO:create_model() successfully completed......................................
2024-10-17 18:37:21,430:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:21,430:INFO:Creating metrics dataframe
2024-10-17 18:37:21,435:INFO:Initializing Random Forest Regressor
2024-10-17 18:37:21,435:INFO:Total runtime is 0.12290897369384765 minutes
2024-10-17 18:37:21,437:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:21,437:INFO:Initializing create_model()
2024-10-17 18:37:21,437:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:21,437:INFO:Checking exceptions
2024-10-17 18:37:21,437:INFO:Importing libraries
2024-10-17 18:37:21,437:INFO:Copying training dataset
2024-10-17 18:37:21,439:INFO:Defining folds
2024-10-17 18:37:21,439:INFO:Declaring metric variables
2024-10-17 18:37:21,442:INFO:Importing untrained model
2024-10-17 18:37:21,444:INFO:Random Forest Regressor Imported successfully
2024-10-17 18:37:21,449:INFO:Starting cross validation
2024-10-17 18:37:21,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:21,708:INFO:Calculating mean and std
2024-10-17 18:37:21,709:INFO:Creating metrics dataframe
2024-10-17 18:37:21,710:INFO:Uploading results into container
2024-10-17 18:37:21,710:INFO:Uploading model into container now
2024-10-17 18:37:21,711:INFO:_master_model_container: 13
2024-10-17 18:37:21,711:INFO:_display_container: 2
2024-10-17 18:37:21,711:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:37:21,711:INFO:create_model() successfully completed......................................
2024-10-17 18:37:21,799:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:21,800:INFO:Creating metrics dataframe
2024-10-17 18:37:21,804:INFO:Initializing Extra Trees Regressor
2024-10-17 18:37:21,804:INFO:Total runtime is 0.12905234098434448 minutes
2024-10-17 18:37:21,806:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:21,807:INFO:Initializing create_model()
2024-10-17 18:37:21,807:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:21,807:INFO:Checking exceptions
2024-10-17 18:37:21,807:INFO:Importing libraries
2024-10-17 18:37:21,807:INFO:Copying training dataset
2024-10-17 18:37:21,808:INFO:Defining folds
2024-10-17 18:37:21,808:INFO:Declaring metric variables
2024-10-17 18:37:21,810:INFO:Importing untrained model
2024-10-17 18:37:21,812:INFO:Extra Trees Regressor Imported successfully
2024-10-17 18:37:21,817:INFO:Starting cross validation
2024-10-17 18:37:21,818:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:22,045:INFO:Calculating mean and std
2024-10-17 18:37:22,045:INFO:Creating metrics dataframe
2024-10-17 18:37:22,047:INFO:Uploading results into container
2024-10-17 18:37:22,048:INFO:Uploading model into container now
2024-10-17 18:37:22,048:INFO:_master_model_container: 14
2024-10-17 18:37:22,048:INFO:_display_container: 2
2024-10-17 18:37:22,049:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:37:22,049:INFO:create_model() successfully completed......................................
2024-10-17 18:37:22,137:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:22,137:INFO:Creating metrics dataframe
2024-10-17 18:37:22,142:INFO:Initializing AdaBoost Regressor
2024-10-17 18:37:22,142:INFO:Total runtime is 0.13468339443206787 minutes
2024-10-17 18:37:22,144:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:22,144:INFO:Initializing create_model()
2024-10-17 18:37:22,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:22,144:INFO:Checking exceptions
2024-10-17 18:37:22,144:INFO:Importing libraries
2024-10-17 18:37:22,144:INFO:Copying training dataset
2024-10-17 18:37:22,146:INFO:Defining folds
2024-10-17 18:37:22,146:INFO:Declaring metric variables
2024-10-17 18:37:22,148:INFO:Importing untrained model
2024-10-17 18:37:22,150:INFO:AdaBoost Regressor Imported successfully
2024-10-17 18:37:22,154:INFO:Starting cross validation
2024-10-17 18:37:22,155:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:22,276:INFO:Calculating mean and std
2024-10-17 18:37:22,276:INFO:Creating metrics dataframe
2024-10-17 18:37:22,278:INFO:Uploading results into container
2024-10-17 18:37:22,278:INFO:Uploading model into container now
2024-10-17 18:37:22,279:INFO:_master_model_container: 15
2024-10-17 18:37:22,279:INFO:_display_container: 2
2024-10-17 18:37:22,279:INFO:AdaBoostRegressor(random_state=123)
2024-10-17 18:37:22,279:INFO:create_model() successfully completed......................................
2024-10-17 18:37:22,366:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:22,366:INFO:Creating metrics dataframe
2024-10-17 18:37:22,372:INFO:Initializing Gradient Boosting Regressor
2024-10-17 18:37:22,372:INFO:Total runtime is 0.1385194182395935 minutes
2024-10-17 18:37:22,374:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:22,374:INFO:Initializing create_model()
2024-10-17 18:37:22,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:22,374:INFO:Checking exceptions
2024-10-17 18:37:22,374:INFO:Importing libraries
2024-10-17 18:37:22,374:INFO:Copying training dataset
2024-10-17 18:37:22,376:INFO:Defining folds
2024-10-17 18:37:22,376:INFO:Declaring metric variables
2024-10-17 18:37:22,378:INFO:Importing untrained model
2024-10-17 18:37:22,380:INFO:Gradient Boosting Regressor Imported successfully
2024-10-17 18:37:22,384:INFO:Starting cross validation
2024-10-17 18:37:22,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:22,536:INFO:Calculating mean and std
2024-10-17 18:37:22,536:INFO:Creating metrics dataframe
2024-10-17 18:37:22,538:INFO:Uploading results into container
2024-10-17 18:37:22,538:INFO:Uploading model into container now
2024-10-17 18:37:22,538:INFO:_master_model_container: 16
2024-10-17 18:37:22,538:INFO:_display_container: 2
2024-10-17 18:37:22,539:INFO:GradientBoostingRegressor(random_state=123)
2024-10-17 18:37:22,539:INFO:create_model() successfully completed......................................
2024-10-17 18:37:22,631:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:22,631:INFO:Creating metrics dataframe
2024-10-17 18:37:22,637:INFO:Initializing Light Gradient Boosting Machine
2024-10-17 18:37:22,637:INFO:Total runtime is 0.14294094642003374 minutes
2024-10-17 18:37:22,639:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:22,639:INFO:Initializing create_model()
2024-10-17 18:37:22,639:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:22,639:INFO:Checking exceptions
2024-10-17 18:37:22,639:INFO:Importing libraries
2024-10-17 18:37:22,639:INFO:Copying training dataset
2024-10-17 18:37:22,641:INFO:Defining folds
2024-10-17 18:37:22,641:INFO:Declaring metric variables
2024-10-17 18:37:22,642:INFO:Importing untrained model
2024-10-17 18:37:22,644:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-17 18:37:22,648:INFO:Starting cross validation
2024-10-17 18:37:22,649:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:23,753:INFO:Calculating mean and std
2024-10-17 18:37:23,753:INFO:Creating metrics dataframe
2024-10-17 18:37:23,755:INFO:Uploading results into container
2024-10-17 18:37:23,755:INFO:Uploading model into container now
2024-10-17 18:37:23,755:INFO:_master_model_container: 17
2024-10-17 18:37:23,756:INFO:_display_container: 2
2024-10-17 18:37:23,756:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:37:23,756:INFO:create_model() successfully completed......................................
2024-10-17 18:37:23,856:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:23,856:INFO:Creating metrics dataframe
2024-10-17 18:37:23,862:INFO:Initializing Dummy Regressor
2024-10-17 18:37:23,862:INFO:Total runtime is 0.16335654656092324 minutes
2024-10-17 18:37:23,864:INFO:SubProcess create_model() called ==================================
2024-10-17 18:37:23,865:INFO:Initializing create_model()
2024-10-17 18:37:23,865:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78DE350>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:23,865:INFO:Checking exceptions
2024-10-17 18:37:23,865:INFO:Importing libraries
2024-10-17 18:37:23,865:INFO:Copying training dataset
2024-10-17 18:37:23,867:INFO:Defining folds
2024-10-17 18:37:23,867:INFO:Declaring metric variables
2024-10-17 18:37:23,868:INFO:Importing untrained model
2024-10-17 18:37:23,870:INFO:Dummy Regressor Imported successfully
2024-10-17 18:37:23,874:INFO:Starting cross validation
2024-10-17 18:37:23,875:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:37:23,967:INFO:Calculating mean and std
2024-10-17 18:37:23,967:INFO:Creating metrics dataframe
2024-10-17 18:37:23,968:INFO:Uploading results into container
2024-10-17 18:37:23,968:INFO:Uploading model into container now
2024-10-17 18:37:23,969:INFO:_master_model_container: 18
2024-10-17 18:37:23,969:INFO:_display_container: 2
2024-10-17 18:37:23,969:INFO:DummyRegressor()
2024-10-17 18:37:23,969:INFO:create_model() successfully completed......................................
2024-10-17 18:37:24,057:INFO:SubProcess create_model() end ==================================
2024-10-17 18:37:24,057:INFO:Creating metrics dataframe
2024-10-17 18:37:24,068:INFO:Initializing create_model()
2024-10-17 18:37:24,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=PassiveAggressiveRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:24,068:INFO:Checking exceptions
2024-10-17 18:37:24,069:INFO:Importing libraries
2024-10-17 18:37:24,069:INFO:Copying training dataset
2024-10-17 18:37:24,071:INFO:Defining folds
2024-10-17 18:37:24,071:INFO:Declaring metric variables
2024-10-17 18:37:24,071:INFO:Importing untrained model
2024-10-17 18:37:24,071:INFO:Declaring custom model
2024-10-17 18:37:24,071:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:37:24,072:INFO:Cross validation set to False
2024-10-17 18:37:24,072:INFO:Fitting Model
2024-10-17 18:37:24,102:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:37:24,102:INFO:create_model() successfully completed......................................
2024-10-17 18:37:24,188:INFO:Creating Dashboard logs
2024-10-17 18:37:24,191:INFO:Model: Passive Aggressive Regressor
2024-10-17 18:37:24,218:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:37:24,280:INFO:Initializing predict_model()
2024-10-17 18:37:24,280:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CBF044C0>)
2024-10-17 18:37:24,280:INFO:Checking exceptions
2024-10-17 18:37:24,280:INFO:Preloading libraries
2024-10-17 18:37:25,047:INFO:Initializing create_model()
2024-10-17 18:37:25,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:25,047:INFO:Checking exceptions
2024-10-17 18:37:25,049:INFO:Importing libraries
2024-10-17 18:37:25,049:INFO:Copying training dataset
2024-10-17 18:37:25,050:INFO:Defining folds
2024-10-17 18:37:25,050:INFO:Declaring metric variables
2024-10-17 18:37:25,051:INFO:Importing untrained model
2024-10-17 18:37:25,051:INFO:Declaring custom model
2024-10-17 18:37:25,051:INFO:Huber Regressor Imported successfully
2024-10-17 18:37:25,052:INFO:Cross validation set to False
2024-10-17 18:37:25,052:INFO:Fitting Model
2024-10-17 18:37:25,081:INFO:HuberRegressor()
2024-10-17 18:37:25,081:INFO:create_model() successfully completed......................................
2024-10-17 18:37:25,172:INFO:Creating Dashboard logs
2024-10-17 18:37:25,174:INFO:Model: Huber Regressor
2024-10-17 18:37:25,198:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-10-17 18:37:25,258:INFO:Initializing predict_model()
2024-10-17 18:37:25,258:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4C68EBA30>)
2024-10-17 18:37:25,258:INFO:Checking exceptions
2024-10-17 18:37:25,258:INFO:Preloading libraries
2024-10-17 18:37:25,521:INFO:Initializing create_model()
2024-10-17 18:37:25,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:37:25,522:INFO:Checking exceptions
2024-10-17 18:37:25,523:INFO:Importing libraries
2024-10-17 18:37:25,523:INFO:Copying training dataset
2024-10-17 18:37:25,524:INFO:Defining folds
2024-10-17 18:37:25,524:INFO:Declaring metric variables
2024-10-17 18:37:25,525:INFO:Importing untrained model
2024-10-17 18:37:25,525:INFO:Declaring custom model
2024-10-17 18:37:25,525:INFO:Least Angle Regression Imported successfully
2024-10-17 18:37:25,526:INFO:Cross validation set to False
2024-10-17 18:37:25,526:INFO:Fitting Model
2024-10-17 18:37:25,555:INFO:Lars(random_state=123)
2024-10-17 18:37:25,555:INFO:create_model() successfully completed......................................
2024-10-17 18:37:25,644:INFO:Creating Dashboard logs
2024-10-17 18:37:25,646:INFO:Model: Least Angle Regression
2024-10-17 18:37:25,687:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:37:25,747:INFO:Initializing predict_model()
2024-10-17 18:37:25,747:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4DB348E20>, estimator=Lars(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4C68EBB50>)
2024-10-17 18:37:25,747:INFO:Checking exceptions
2024-10-17 18:37:25,747:INFO:Preloading libraries
2024-10-17 18:37:26,010:INFO:Creating Dashboard logs
2024-10-17 18:37:26,012:INFO:Model: Lasso Regression
2024-10-17 18:37:26,037:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:37:26,206:INFO:Creating Dashboard logs
2024-10-17 18:37:26,208:INFO:Model: Ridge Regression
2024-10-17 18:37:26,230:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-17 18:37:26,407:INFO:Creating Dashboard logs
2024-10-17 18:37:26,408:INFO:Model: Lasso Least Angle Regression
2024-10-17 18:37:26,433:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:37:26,611:INFO:Creating Dashboard logs
2024-10-17 18:37:26,613:INFO:Model: Linear Regression
2024-10-17 18:37:26,638:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-10-17 18:37:26,806:INFO:Creating Dashboard logs
2024-10-17 18:37:26,808:INFO:Model: Bayesian Ridge
2024-10-17 18:37:26,833:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-10-17 18:37:27,005:INFO:Creating Dashboard logs
2024-10-17 18:37:27,007:INFO:Model: Elastic Net
2024-10-17 18:37:27,033:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:37:27,217:INFO:Creating Dashboard logs
2024-10-17 18:37:27,219:INFO:Model: Orthogonal Matching Pursuit
2024-10-17 18:37:27,243:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-10-17 18:37:27,415:INFO:Creating Dashboard logs
2024-10-17 18:37:27,417:INFO:Model: Dummy Regressor
2024-10-17 18:37:27,444:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-10-17 18:37:27,613:INFO:Creating Dashboard logs
2024-10-17 18:37:27,615:INFO:Model: Gradient Boosting Regressor
2024-10-17 18:37:27,640:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:37:27,820:INFO:Creating Dashboard logs
2024-10-17 18:37:27,822:INFO:Model: K Neighbors Regressor
2024-10-17 18:37:27,847:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-17 18:37:28,023:INFO:Creating Dashboard logs
2024-10-17 18:37:28,025:INFO:Model: Light Gradient Boosting Machine
2024-10-17 18:37:28,050:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-17 18:37:28,230:INFO:Creating Dashboard logs
2024-10-17 18:37:28,233:INFO:Model: Extra Trees Regressor
2024-10-17 18:37:28,259:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:37:28,444:INFO:Creating Dashboard logs
2024-10-17 18:37:28,446:INFO:Model: Random Forest Regressor
2024-10-17 18:37:28,472:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:37:28,644:INFO:Creating Dashboard logs
2024-10-17 18:37:28,646:INFO:Model: Decision Tree Regressor
2024-10-17 18:37:28,669:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-17 18:37:28,840:INFO:Creating Dashboard logs
2024-10-17 18:37:28,842:INFO:Model: AdaBoost Regressor
2024-10-17 18:37:28,867:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 123}
2024-10-17 18:37:29,043:INFO:_master_model_container: 18
2024-10-17 18:37:29,043:INFO:_display_container: 2
2024-10-17 18:37:29,044:INFO:[PassiveAggressiveRegressor(random_state=123), HuberRegressor(), Lars(random_state=123)]
2024-10-17 18:37:29,044:INFO:compare_models() successfully completed......................................
2024-10-17 18:46:42,617:INFO:PyCaret RegressionExperiment
2024-10-17 18:46:42,617:INFO:Logging name: charges_model
2024-10-17 18:46:42,617:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-17 18:46:42,617:INFO:version 3.3.2
2024-10-17 18:46:42,617:INFO:Initializing setup()
2024-10-17 18:46:42,617:INFO:self.USI: a868
2024-10-17 18:46:42,617:INFO:self._variable_keys: {'seed', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', '_available_plots', 'log_plots_param', 'fold_groups_param', 'idx', 'data', 'fold_generator', 'USI', '_ml_usecase', 'html_param', 'y', 'target_param', 'exp_name_log', 'y_test', 'gpu_param', 'exp_id', 'y_train', 'fold_shuffle_param', 'logging_param', 'X_test', 'memory', 'X_train', 'n_jobs_param'}
2024-10-17 18:46:42,617:INFO:Checking environment
2024-10-17 18:46:42,617:INFO:python_version: 3.10.10
2024-10-17 18:46:42,617:INFO:python_build: ('tags/v3.10.10:aad5f6a', 'Feb  7 2023 17:20:36')
2024-10-17 18:46:42,617:INFO:machine: AMD64
2024-10-17 18:46:42,617:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-17 18:46:42,619:INFO:Memory: svmem(total=34175172608, available=20377870336, percent=40.4, used=13797302272, free=20377870336)
2024-10-17 18:46:42,619:INFO:Physical Core: 16
2024-10-17 18:46:42,619:INFO:Logical Core: 24
2024-10-17 18:46:42,619:INFO:Checking libraries
2024-10-17 18:46:42,619:INFO:System:
2024-10-17 18:46:42,619:INFO:    python: 3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)]
2024-10-17 18:46:42,619:INFO:executable: c:\Users\Anime\Desktop\cientifica\.venv\Scripts\python.exe
2024-10-17 18:46:42,619:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-17 18:46:42,619:INFO:PyCaret required dependencies:
2024-10-17 18:46:42,619:INFO:                 pip: 24.2
2024-10-17 18:46:42,619:INFO:          setuptools: 65.5.0
2024-10-17 18:46:42,619:INFO:             pycaret: 3.3.2
2024-10-17 18:46:42,619:INFO:             IPython: 8.28.0
2024-10-17 18:46:42,620:INFO:          ipywidgets: 8.1.5
2024-10-17 18:46:42,620:INFO:                tqdm: 4.66.5
2024-10-17 18:46:42,620:INFO:               numpy: 1.26.4
2024-10-17 18:46:42,620:INFO:              pandas: 2.1.4
2024-10-17 18:46:42,620:INFO:              jinja2: 3.1.4
2024-10-17 18:46:42,620:INFO:               scipy: 1.11.4
2024-10-17 18:46:42,620:INFO:              joblib: 1.3.2
2024-10-17 18:46:42,620:INFO:             sklearn: 1.4.2
2024-10-17 18:46:42,620:INFO:                pyod: 2.0.2
2024-10-17 18:46:42,620:INFO:            imblearn: 0.12.4
2024-10-17 18:46:42,620:INFO:   category_encoders: 2.6.4
2024-10-17 18:46:42,620:INFO:            lightgbm: 4.5.0
2024-10-17 18:46:42,620:INFO:               numba: 0.60.0
2024-10-17 18:46:42,620:INFO:            requests: 2.32.3
2024-10-17 18:46:42,620:INFO:          matplotlib: 3.7.5
2024-10-17 18:46:42,620:INFO:          scikitplot: 0.3.7
2024-10-17 18:46:42,620:INFO:         yellowbrick: 1.5
2024-10-17 18:46:42,620:INFO:              plotly: 5.24.1
2024-10-17 18:46:42,620:INFO:    plotly-resampler: Not installed
2024-10-17 18:46:42,620:INFO:             kaleido: 0.2.1
2024-10-17 18:46:42,620:INFO:           schemdraw: 0.15
2024-10-17 18:46:42,620:INFO:         statsmodels: 0.14.4
2024-10-17 18:46:42,620:INFO:              sktime: 0.26.0
2024-10-17 18:46:42,620:INFO:               tbats: 1.1.3
2024-10-17 18:46:42,620:INFO:            pmdarima: 2.0.4
2024-10-17 18:46:42,620:INFO:              psutil: 6.0.0
2024-10-17 18:46:42,620:INFO:          markupsafe: 2.1.5
2024-10-17 18:46:42,620:INFO:             pickle5: Not installed
2024-10-17 18:46:42,620:INFO:         cloudpickle: 3.1.0
2024-10-17 18:46:42,620:INFO:         deprecation: 2.1.0
2024-10-17 18:46:42,620:INFO:              xxhash: 3.5.0
2024-10-17 18:46:42,620:INFO:           wurlitzer: Not installed
2024-10-17 18:46:42,620:INFO:PyCaret optional dependencies:
2024-10-17 18:46:42,620:INFO:                shap: Not installed
2024-10-17 18:46:42,620:INFO:           interpret: Not installed
2024-10-17 18:46:42,620:INFO:                umap: Not installed
2024-10-17 18:46:42,620:INFO:     ydata_profiling: 4.11.0
2024-10-17 18:46:42,620:INFO:  explainerdashboard: Not installed
2024-10-17 18:46:42,620:INFO:             autoviz: Not installed
2024-10-17 18:46:42,620:INFO:           fairlearn: Not installed
2024-10-17 18:46:42,620:INFO:          deepchecks: Not installed
2024-10-17 18:46:42,620:INFO:             xgboost: Not installed
2024-10-17 18:46:42,620:INFO:            catboost: Not installed
2024-10-17 18:46:42,620:INFO:              kmodes: Not installed
2024-10-17 18:46:42,620:INFO:             mlxtend: Not installed
2024-10-17 18:46:42,620:INFO:       statsforecast: Not installed
2024-10-17 18:46:42,620:INFO:        tune_sklearn: Not installed
2024-10-17 18:46:42,620:INFO:                 ray: Not installed
2024-10-17 18:46:42,620:INFO:            hyperopt: Not installed
2024-10-17 18:46:42,620:INFO:              optuna: Not installed
2024-10-17 18:46:42,620:INFO:               skopt: Not installed
2024-10-17 18:46:42,620:INFO:              mlflow: 2.17.0
2024-10-17 18:46:42,620:INFO:              gradio: 5.1.0
2024-10-17 18:46:42,620:INFO:             fastapi: 0.115.2
2024-10-17 18:46:42,620:INFO:             uvicorn: 0.32.0
2024-10-17 18:46:42,620:INFO:              m2cgen: Not installed
2024-10-17 18:46:42,620:INFO:           evidently: Not installed
2024-10-17 18:46:42,620:INFO:               fugue: Not installed
2024-10-17 18:46:42,620:INFO:           streamlit: Not installed
2024-10-17 18:46:42,620:INFO:             prophet: Not installed
2024-10-17 18:46:42,620:INFO:None
2024-10-17 18:46:42,621:INFO:Set up data.
2024-10-17 18:46:42,623:INFO:Set up folding strategy.
2024-10-17 18:46:42,624:INFO:Set up train/test split.
2024-10-17 18:46:42,625:INFO:Set up index.
2024-10-17 18:46:42,626:INFO:Assigning column types.
2024-10-17 18:46:42,627:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-17 18:46:42,627:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,632:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,680:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,682:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,730:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,732:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-17 18:46:42,734:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,736:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,761:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,781:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,784:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,786:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,811:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,832:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-17 18:46:42,836:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,882:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,887:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,913:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,933:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,933:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-17 18:46:42,963:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:42,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:42,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,015:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:43,035:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:46:43,036:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,036:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-17 18:46:43,066:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:43,087:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,118:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:46:43,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,139:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-17 18:46:43,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,243:INFO:Preparing preprocessing pipeline...
2024-10-17 18:46:43,243:INFO:Set up simple imputation.
2024-10-17 18:46:43,244:INFO:Set up encoding of ordinal features.
2024-10-17 18:46:43,245:INFO:Set up encoding of categorical features.
2024-10-17 18:46:43,245:INFO:Set up removing multicollinearity.
2024-10-17 18:46:43,245:INFO:Set up column transformation.
2024-10-17 18:46:43,245:INFO:Set up feature normalization.
2024-10-17 18:46:43,294:INFO:Finished creating preprocessing pipeline.
2024-10-17 18:46:43,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:46:43,305:INFO:Creating final display dataframe.
2024-10-17 18:46:43,416:INFO:Setup _display_container:                     Description          Value
0                    Session id            123
1                        Target        charges
2                   Target type     Regression
3           Original data shape      (1204, 7)
4        Transformed data shape      (1204, 8)
5   Transformed train set shape       (842, 8)
6    Transformed test set shape       (362, 8)
7               Ignore features              2
8              Numeric features              2
9          Categorical features              2
10                   Preprocess           True
11              Imputation type         simple
12           Numeric imputation           mean
13       Categorical imputation           mode
14     Maximum one-hot encoding             25
15              Encoding method           None
16     Remove multicollinearity           True
17  Multicollinearity threshold            0.9
18               Transformation           True
19        Transformation method    yeo-johnson
20                    Normalize           True
21             Normalize method         zscore
22               Fold Generator          KFold
23                  Fold Number             10
24                     CPU Jobs             -1
25                      Use GPU          False
26               Log Experiment   MlflowLogger
27              Experiment Name  charges_model
28                          USI           a868
2024-10-17 18:46:43,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:46:43,524:INFO:Logging experiment in loggers
2024-10-17 18:46:43,577:INFO:SubProcess save_model() called ==================================
2024-10-17 18:46:43,599:INFO:Initializing save_model()
2024-10-17 18:46:43,599:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), model_name=C:\Users\Anime\AppData\Local\Temp\tmp2cyzwz4o\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-17 18:46:43,599:INFO:Adding model into prep_pipe
2024-10-17 18:46:43,599:WARNING:Only Model saved as it was a pipeline.
2024-10-17 18:46:43,602:INFO:C:\Users\Anime\AppData\Local\Temp\tmp2cyzwz4o\Transformation Pipeline.pkl saved in current working directory
2024-10-17 18:46:43,613:INFO:Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:46:43,613:INFO:save_model() successfully completed......................................
2024-10-17 18:46:43,740:INFO:SubProcess save_model() end ==================================
2024-10-17 18:46:43,769:INFO:setup() successfully completed in 0.91s...............
2024-10-17 18:46:45,954:INFO:Initializing compare_models()
2024-10-17 18:46:45,954:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-10-17 18:46:45,954:INFO:Checking exceptions
2024-10-17 18:46:45,956:INFO:Preparing display monitor
2024-10-17 18:46:45,972:INFO:Initializing Linear Regression
2024-10-17 18:46:45,973:INFO:Total runtime is 0.0 minutes
2024-10-17 18:46:45,975:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:45,975:INFO:Initializing create_model()
2024-10-17 18:46:45,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:45,975:INFO:Checking exceptions
2024-10-17 18:46:45,975:INFO:Importing libraries
2024-10-17 18:46:45,975:INFO:Copying training dataset
2024-10-17 18:46:45,977:INFO:Defining folds
2024-10-17 18:46:45,977:INFO:Declaring metric variables
2024-10-17 18:46:45,979:INFO:Importing untrained model
2024-10-17 18:46:45,981:INFO:Linear Regression Imported successfully
2024-10-17 18:46:45,984:INFO:Starting cross validation
2024-10-17 18:46:45,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:48,042:INFO:Calculating mean and std
2024-10-17 18:46:48,044:INFO:Creating metrics dataframe
2024-10-17 18:46:48,046:INFO:Uploading results into container
2024-10-17 18:46:48,046:INFO:Uploading model into container now
2024-10-17 18:46:48,046:INFO:_master_model_container: 1
2024-10-17 18:46:48,047:INFO:_display_container: 2
2024-10-17 18:46:48,047:INFO:LinearRegression(n_jobs=-1)
2024-10-17 18:46:48,047:INFO:create_model() successfully completed......................................
2024-10-17 18:46:48,138:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:48,138:INFO:Creating metrics dataframe
2024-10-17 18:46:48,141:INFO:Initializing Lasso Regression
2024-10-17 18:46:48,142:INFO:Total runtime is 0.03617540200551351 minutes
2024-10-17 18:46:48,144:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:48,144:INFO:Initializing create_model()
2024-10-17 18:46:48,144:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:48,144:INFO:Checking exceptions
2024-10-17 18:46:48,144:INFO:Importing libraries
2024-10-17 18:46:48,144:INFO:Copying training dataset
2024-10-17 18:46:48,146:INFO:Defining folds
2024-10-17 18:46:48,146:INFO:Declaring metric variables
2024-10-17 18:46:48,148:INFO:Importing untrained model
2024-10-17 18:46:48,151:INFO:Lasso Regression Imported successfully
2024-10-17 18:46:48,155:INFO:Starting cross validation
2024-10-17 18:46:48,156:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:49,753:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.884e+07, tolerance: 1.041e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:46:49,801:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.735e+07, tolerance: 9.792e+06
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:46:49,822:INFO:Calculating mean and std
2024-10-17 18:46:49,824:INFO:Creating metrics dataframe
2024-10-17 18:46:49,826:INFO:Uploading results into container
2024-10-17 18:46:49,827:INFO:Uploading model into container now
2024-10-17 18:46:49,827:INFO:_master_model_container: 2
2024-10-17 18:46:49,827:INFO:_display_container: 2
2024-10-17 18:46:49,828:INFO:Lasso(random_state=123)
2024-10-17 18:46:49,828:INFO:create_model() successfully completed......................................
2024-10-17 18:46:49,925:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:49,925:INFO:Creating metrics dataframe
2024-10-17 18:46:49,929:INFO:Initializing Ridge Regression
2024-10-17 18:46:49,929:INFO:Total runtime is 0.06595425208409628 minutes
2024-10-17 18:46:49,931:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:49,931:INFO:Initializing create_model()
2024-10-17 18:46:49,931:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:49,931:INFO:Checking exceptions
2024-10-17 18:46:49,931:INFO:Importing libraries
2024-10-17 18:46:49,931:INFO:Copying training dataset
2024-10-17 18:46:49,934:INFO:Defining folds
2024-10-17 18:46:49,934:INFO:Declaring metric variables
2024-10-17 18:46:49,936:INFO:Importing untrained model
2024-10-17 18:46:49,938:INFO:Ridge Regression Imported successfully
2024-10-17 18:46:49,942:INFO:Starting cross validation
2024-10-17 18:46:49,943:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:51,253:INFO:Calculating mean and std
2024-10-17 18:46:51,254:INFO:Creating metrics dataframe
2024-10-17 18:46:51,255:INFO:Uploading results into container
2024-10-17 18:46:51,256:INFO:Uploading model into container now
2024-10-17 18:46:51,256:INFO:_master_model_container: 3
2024-10-17 18:46:51,256:INFO:_display_container: 2
2024-10-17 18:46:51,256:INFO:Ridge(random_state=123)
2024-10-17 18:46:51,257:INFO:create_model() successfully completed......................................
2024-10-17 18:46:51,356:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:51,356:INFO:Creating metrics dataframe
2024-10-17 18:46:51,360:INFO:Initializing Elastic Net
2024-10-17 18:46:51,360:INFO:Total runtime is 0.08980715274810791 minutes
2024-10-17 18:46:51,362:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:51,362:INFO:Initializing create_model()
2024-10-17 18:46:51,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:51,362:INFO:Checking exceptions
2024-10-17 18:46:51,362:INFO:Importing libraries
2024-10-17 18:46:51,362:INFO:Copying training dataset
2024-10-17 18:46:51,364:INFO:Defining folds
2024-10-17 18:46:51,364:INFO:Declaring metric variables
2024-10-17 18:46:51,366:INFO:Importing untrained model
2024-10-17 18:46:51,369:INFO:Elastic Net Imported successfully
2024-10-17 18:46:51,372:INFO:Starting cross validation
2024-10-17 18:46:51,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:51,466:INFO:Calculating mean and std
2024-10-17 18:46:51,467:INFO:Creating metrics dataframe
2024-10-17 18:46:51,468:INFO:Uploading results into container
2024-10-17 18:46:51,468:INFO:Uploading model into container now
2024-10-17 18:46:51,468:INFO:_master_model_container: 4
2024-10-17 18:46:51,468:INFO:_display_container: 2
2024-10-17 18:46:51,469:INFO:ElasticNet(random_state=123)
2024-10-17 18:46:51,469:INFO:create_model() successfully completed......................................
2024-10-17 18:46:51,559:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:51,559:INFO:Creating metrics dataframe
2024-10-17 18:46:51,564:INFO:Initializing Least Angle Regression
2024-10-17 18:46:51,564:INFO:Total runtime is 0.0932057778040568 minutes
2024-10-17 18:46:51,566:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:51,566:INFO:Initializing create_model()
2024-10-17 18:46:51,566:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:51,566:INFO:Checking exceptions
2024-10-17 18:46:51,566:INFO:Importing libraries
2024-10-17 18:46:51,566:INFO:Copying training dataset
2024-10-17 18:46:51,568:INFO:Defining folds
2024-10-17 18:46:51,568:INFO:Declaring metric variables
2024-10-17 18:46:51,571:INFO:Importing untrained model
2024-10-17 18:46:51,573:INFO:Least Angle Regression Imported successfully
2024-10-17 18:46:51,577:INFO:Starting cross validation
2024-10-17 18:46:51,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:51,666:INFO:Calculating mean and std
2024-10-17 18:46:51,666:INFO:Creating metrics dataframe
2024-10-17 18:46:51,667:INFO:Uploading results into container
2024-10-17 18:46:51,667:INFO:Uploading model into container now
2024-10-17 18:46:51,668:INFO:_master_model_container: 5
2024-10-17 18:46:51,668:INFO:_display_container: 2
2024-10-17 18:46:51,668:INFO:Lars(random_state=123)
2024-10-17 18:46:51,668:INFO:create_model() successfully completed......................................
2024-10-17 18:46:51,757:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:51,757:INFO:Creating metrics dataframe
2024-10-17 18:46:51,761:INFO:Initializing Lasso Least Angle Regression
2024-10-17 18:46:51,761:INFO:Total runtime is 0.09648961226145426 minutes
2024-10-17 18:46:51,763:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:51,764:INFO:Initializing create_model()
2024-10-17 18:46:51,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:51,764:INFO:Checking exceptions
2024-10-17 18:46:51,764:INFO:Importing libraries
2024-10-17 18:46:51,764:INFO:Copying training dataset
2024-10-17 18:46:51,766:INFO:Defining folds
2024-10-17 18:46:51,766:INFO:Declaring metric variables
2024-10-17 18:46:51,768:INFO:Importing untrained model
2024-10-17 18:46:51,771:INFO:Lasso Least Angle Regression Imported successfully
2024-10-17 18:46:51,775:INFO:Starting cross validation
2024-10-17 18:46:51,776:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:51,881:INFO:Calculating mean and std
2024-10-17 18:46:51,882:INFO:Creating metrics dataframe
2024-10-17 18:46:51,883:INFO:Uploading results into container
2024-10-17 18:46:51,884:INFO:Uploading model into container now
2024-10-17 18:46:51,884:INFO:_master_model_container: 6
2024-10-17 18:46:51,884:INFO:_display_container: 2
2024-10-17 18:46:51,884:INFO:LassoLars(random_state=123)
2024-10-17 18:46:51,885:INFO:create_model() successfully completed......................................
2024-10-17 18:46:51,975:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:51,976:INFO:Creating metrics dataframe
2024-10-17 18:46:51,979:INFO:Initializing Orthogonal Matching Pursuit
2024-10-17 18:46:51,979:INFO:Total runtime is 0.10012487967809042 minutes
2024-10-17 18:46:51,981:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:51,982:INFO:Initializing create_model()
2024-10-17 18:46:51,982:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:51,982:INFO:Checking exceptions
2024-10-17 18:46:51,982:INFO:Importing libraries
2024-10-17 18:46:51,982:INFO:Copying training dataset
2024-10-17 18:46:51,984:INFO:Defining folds
2024-10-17 18:46:51,984:INFO:Declaring metric variables
2024-10-17 18:46:51,989:INFO:Importing untrained model
2024-10-17 18:46:51,991:INFO:Orthogonal Matching Pursuit Imported successfully
2024-10-17 18:46:52,000:INFO:Starting cross validation
2024-10-17 18:46:52,002:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:52,096:INFO:Calculating mean and std
2024-10-17 18:46:52,097:INFO:Creating metrics dataframe
2024-10-17 18:46:52,098:INFO:Uploading results into container
2024-10-17 18:46:52,098:INFO:Uploading model into container now
2024-10-17 18:46:52,098:INFO:_master_model_container: 7
2024-10-17 18:46:52,098:INFO:_display_container: 2
2024-10-17 18:46:52,098:INFO:OrthogonalMatchingPursuit()
2024-10-17 18:46:52,099:INFO:create_model() successfully completed......................................
2024-10-17 18:46:52,188:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:52,188:INFO:Creating metrics dataframe
2024-10-17 18:46:52,193:INFO:Initializing Bayesian Ridge
2024-10-17 18:46:52,193:INFO:Total runtime is 0.10369002421696981 minutes
2024-10-17 18:46:52,195:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:52,195:INFO:Initializing create_model()
2024-10-17 18:46:52,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:52,195:INFO:Checking exceptions
2024-10-17 18:46:52,195:INFO:Importing libraries
2024-10-17 18:46:52,195:INFO:Copying training dataset
2024-10-17 18:46:52,197:INFO:Defining folds
2024-10-17 18:46:52,197:INFO:Declaring metric variables
2024-10-17 18:46:52,199:INFO:Importing untrained model
2024-10-17 18:46:52,201:INFO:Bayesian Ridge Imported successfully
2024-10-17 18:46:52,204:INFO:Starting cross validation
2024-10-17 18:46:52,206:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:52,309:INFO:Calculating mean and std
2024-10-17 18:46:52,310:INFO:Creating metrics dataframe
2024-10-17 18:46:52,311:INFO:Uploading results into container
2024-10-17 18:46:52,311:INFO:Uploading model into container now
2024-10-17 18:46:52,312:INFO:_master_model_container: 8
2024-10-17 18:46:52,312:INFO:_display_container: 2
2024-10-17 18:46:52,312:INFO:BayesianRidge()
2024-10-17 18:46:52,312:INFO:create_model() successfully completed......................................
2024-10-17 18:46:52,403:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:52,403:INFO:Creating metrics dataframe
2024-10-17 18:46:52,407:INFO:Initializing Passive Aggressive Regressor
2024-10-17 18:46:52,407:INFO:Total runtime is 0.10726144313812255 minutes
2024-10-17 18:46:52,409:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:52,409:INFO:Initializing create_model()
2024-10-17 18:46:52,409:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:52,409:INFO:Checking exceptions
2024-10-17 18:46:52,410:INFO:Importing libraries
2024-10-17 18:46:52,410:INFO:Copying training dataset
2024-10-17 18:46:52,412:INFO:Defining folds
2024-10-17 18:46:52,412:INFO:Declaring metric variables
2024-10-17 18:46:52,414:INFO:Importing untrained model
2024-10-17 18:46:52,416:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:46:52,419:INFO:Starting cross validation
2024-10-17 18:46:52,420:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:52,522:INFO:Calculating mean and std
2024-10-17 18:46:52,523:INFO:Creating metrics dataframe
2024-10-17 18:46:52,524:INFO:Uploading results into container
2024-10-17 18:46:52,524:INFO:Uploading model into container now
2024-10-17 18:46:52,524:INFO:_master_model_container: 9
2024-10-17 18:46:52,524:INFO:_display_container: 2
2024-10-17 18:46:52,525:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:46:52,525:INFO:create_model() successfully completed......................................
2024-10-17 18:46:52,616:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:52,616:INFO:Creating metrics dataframe
2024-10-17 18:46:52,621:INFO:Initializing Huber Regressor
2024-10-17 18:46:52,621:INFO:Total runtime is 0.1108236789703369 minutes
2024-10-17 18:46:52,623:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:52,623:INFO:Initializing create_model()
2024-10-17 18:46:52,623:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:52,623:INFO:Checking exceptions
2024-10-17 18:46:52,623:INFO:Importing libraries
2024-10-17 18:46:52,623:INFO:Copying training dataset
2024-10-17 18:46:52,625:INFO:Defining folds
2024-10-17 18:46:52,625:INFO:Declaring metric variables
2024-10-17 18:46:52,627:INFO:Importing untrained model
2024-10-17 18:46:52,629:INFO:Huber Regressor Imported successfully
2024-10-17 18:46:52,633:INFO:Starting cross validation
2024-10-17 18:46:52,634:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:52,736:INFO:Calculating mean and std
2024-10-17 18:46:52,737:INFO:Creating metrics dataframe
2024-10-17 18:46:52,738:INFO:Uploading results into container
2024-10-17 18:46:52,738:INFO:Uploading model into container now
2024-10-17 18:46:52,739:INFO:_master_model_container: 10
2024-10-17 18:46:52,739:INFO:_display_container: 2
2024-10-17 18:46:52,739:INFO:HuberRegressor()
2024-10-17 18:46:52,739:INFO:create_model() successfully completed......................................
2024-10-17 18:46:52,833:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:52,833:INFO:Creating metrics dataframe
2024-10-17 18:46:52,838:INFO:Initializing K Neighbors Regressor
2024-10-17 18:46:52,838:INFO:Total runtime is 0.11443923314412434 minutes
2024-10-17 18:46:52,840:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:52,840:INFO:Initializing create_model()
2024-10-17 18:46:52,840:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:52,840:INFO:Checking exceptions
2024-10-17 18:46:52,840:INFO:Importing libraries
2024-10-17 18:46:52,840:INFO:Copying training dataset
2024-10-17 18:46:52,843:INFO:Defining folds
2024-10-17 18:46:52,843:INFO:Declaring metric variables
2024-10-17 18:46:52,845:INFO:Importing untrained model
2024-10-17 18:46:52,848:INFO:K Neighbors Regressor Imported successfully
2024-10-17 18:46:52,851:INFO:Starting cross validation
2024-10-17 18:46:52,852:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:52,984:INFO:Calculating mean and std
2024-10-17 18:46:52,985:INFO:Creating metrics dataframe
2024-10-17 18:46:52,987:INFO:Uploading results into container
2024-10-17 18:46:52,987:INFO:Uploading model into container now
2024-10-17 18:46:52,988:INFO:_master_model_container: 11
2024-10-17 18:46:52,988:INFO:_display_container: 2
2024-10-17 18:46:52,988:INFO:KNeighborsRegressor(n_jobs=-1)
2024-10-17 18:46:52,988:INFO:create_model() successfully completed......................................
2024-10-17 18:46:53,079:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:53,079:INFO:Creating metrics dataframe
2024-10-17 18:46:53,083:INFO:Initializing Decision Tree Regressor
2024-10-17 18:46:53,083:INFO:Total runtime is 0.11851844787597655 minutes
2024-10-17 18:46:53,085:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:53,086:INFO:Initializing create_model()
2024-10-17 18:46:53,086:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:53,086:INFO:Checking exceptions
2024-10-17 18:46:53,086:INFO:Importing libraries
2024-10-17 18:46:53,086:INFO:Copying training dataset
2024-10-17 18:46:53,088:INFO:Defining folds
2024-10-17 18:46:53,088:INFO:Declaring metric variables
2024-10-17 18:46:53,090:INFO:Importing untrained model
2024-10-17 18:46:53,094:INFO:Decision Tree Regressor Imported successfully
2024-10-17 18:46:53,098:INFO:Starting cross validation
2024-10-17 18:46:53,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:53,196:INFO:Calculating mean and std
2024-10-17 18:46:53,197:INFO:Creating metrics dataframe
2024-10-17 18:46:53,198:INFO:Uploading results into container
2024-10-17 18:46:53,198:INFO:Uploading model into container now
2024-10-17 18:46:53,198:INFO:_master_model_container: 12
2024-10-17 18:46:53,198:INFO:_display_container: 2
2024-10-17 18:46:53,198:INFO:DecisionTreeRegressor(random_state=123)
2024-10-17 18:46:53,199:INFO:create_model() successfully completed......................................
2024-10-17 18:46:53,289:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:53,289:INFO:Creating metrics dataframe
2024-10-17 18:46:53,294:INFO:Initializing Random Forest Regressor
2024-10-17 18:46:53,294:INFO:Total runtime is 0.12203965584437051 minutes
2024-10-17 18:46:53,297:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:53,297:INFO:Initializing create_model()
2024-10-17 18:46:53,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:53,297:INFO:Checking exceptions
2024-10-17 18:46:53,297:INFO:Importing libraries
2024-10-17 18:46:53,297:INFO:Copying training dataset
2024-10-17 18:46:53,299:INFO:Defining folds
2024-10-17 18:46:53,299:INFO:Declaring metric variables
2024-10-17 18:46:53,301:INFO:Importing untrained model
2024-10-17 18:46:53,304:INFO:Random Forest Regressor Imported successfully
2024-10-17 18:46:53,308:INFO:Starting cross validation
2024-10-17 18:46:53,309:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:53,549:INFO:Calculating mean and std
2024-10-17 18:46:53,550:INFO:Creating metrics dataframe
2024-10-17 18:46:53,551:INFO:Uploading results into container
2024-10-17 18:46:53,551:INFO:Uploading model into container now
2024-10-17 18:46:53,552:INFO:_master_model_container: 13
2024-10-17 18:46:53,552:INFO:_display_container: 2
2024-10-17 18:46:53,552:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:46:53,552:INFO:create_model() successfully completed......................................
2024-10-17 18:46:53,642:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:53,642:INFO:Creating metrics dataframe
2024-10-17 18:46:53,647:INFO:Initializing Extra Trees Regressor
2024-10-17 18:46:53,647:INFO:Total runtime is 0.1279141624768575 minutes
2024-10-17 18:46:53,648:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:53,648:INFO:Initializing create_model()
2024-10-17 18:46:53,648:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:53,648:INFO:Checking exceptions
2024-10-17 18:46:53,648:INFO:Importing libraries
2024-10-17 18:46:53,648:INFO:Copying training dataset
2024-10-17 18:46:53,650:INFO:Defining folds
2024-10-17 18:46:53,650:INFO:Declaring metric variables
2024-10-17 18:46:53,653:INFO:Importing untrained model
2024-10-17 18:46:53,657:INFO:Extra Trees Regressor Imported successfully
2024-10-17 18:46:53,664:INFO:Starting cross validation
2024-10-17 18:46:53,666:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:53,873:INFO:Calculating mean and std
2024-10-17 18:46:53,874:INFO:Creating metrics dataframe
2024-10-17 18:46:53,875:INFO:Uploading results into container
2024-10-17 18:46:53,875:INFO:Uploading model into container now
2024-10-17 18:46:53,876:INFO:_master_model_container: 14
2024-10-17 18:46:53,876:INFO:_display_container: 2
2024-10-17 18:46:53,876:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:46:53,876:INFO:create_model() successfully completed......................................
2024-10-17 18:46:53,967:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:53,967:INFO:Creating metrics dataframe
2024-10-17 18:46:53,972:INFO:Initializing AdaBoost Regressor
2024-10-17 18:46:53,972:INFO:Total runtime is 0.1333307981491089 minutes
2024-10-17 18:46:53,973:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:53,973:INFO:Initializing create_model()
2024-10-17 18:46:53,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:53,973:INFO:Checking exceptions
2024-10-17 18:46:53,973:INFO:Importing libraries
2024-10-17 18:46:53,973:INFO:Copying training dataset
2024-10-17 18:46:53,975:INFO:Defining folds
2024-10-17 18:46:53,975:INFO:Declaring metric variables
2024-10-17 18:46:53,977:INFO:Importing untrained model
2024-10-17 18:46:53,979:INFO:AdaBoost Regressor Imported successfully
2024-10-17 18:46:53,984:INFO:Starting cross validation
2024-10-17 18:46:53,985:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:54,103:INFO:Calculating mean and std
2024-10-17 18:46:54,104:INFO:Creating metrics dataframe
2024-10-17 18:46:54,105:INFO:Uploading results into container
2024-10-17 18:46:54,105:INFO:Uploading model into container now
2024-10-17 18:46:54,105:INFO:_master_model_container: 15
2024-10-17 18:46:54,105:INFO:_display_container: 2
2024-10-17 18:46:54,106:INFO:AdaBoostRegressor(random_state=123)
2024-10-17 18:46:54,106:INFO:create_model() successfully completed......................................
2024-10-17 18:46:54,196:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:54,196:INFO:Creating metrics dataframe
2024-10-17 18:46:54,201:INFO:Initializing Gradient Boosting Regressor
2024-10-17 18:46:54,201:INFO:Total runtime is 0.13715771436691285 minutes
2024-10-17 18:46:54,203:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:54,203:INFO:Initializing create_model()
2024-10-17 18:46:54,203:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:54,203:INFO:Checking exceptions
2024-10-17 18:46:54,204:INFO:Importing libraries
2024-10-17 18:46:54,204:INFO:Copying training dataset
2024-10-17 18:46:54,206:INFO:Defining folds
2024-10-17 18:46:54,206:INFO:Declaring metric variables
2024-10-17 18:46:54,208:INFO:Importing untrained model
2024-10-17 18:46:54,210:INFO:Gradient Boosting Regressor Imported successfully
2024-10-17 18:46:54,214:INFO:Starting cross validation
2024-10-17 18:46:54,215:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:54,364:INFO:Calculating mean and std
2024-10-17 18:46:54,365:INFO:Creating metrics dataframe
2024-10-17 18:46:54,366:INFO:Uploading results into container
2024-10-17 18:46:54,366:INFO:Uploading model into container now
2024-10-17 18:46:54,367:INFO:_master_model_container: 16
2024-10-17 18:46:54,367:INFO:_display_container: 2
2024-10-17 18:46:54,367:INFO:GradientBoostingRegressor(random_state=123)
2024-10-17 18:46:54,367:INFO:create_model() successfully completed......................................
2024-10-17 18:46:54,461:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:54,461:INFO:Creating metrics dataframe
2024-10-17 18:46:54,467:INFO:Initializing Light Gradient Boosting Machine
2024-10-17 18:46:54,467:INFO:Total runtime is 0.14159297148386638 minutes
2024-10-17 18:46:54,469:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:54,469:INFO:Initializing create_model()
2024-10-17 18:46:54,469:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:54,469:INFO:Checking exceptions
2024-10-17 18:46:54,470:INFO:Importing libraries
2024-10-17 18:46:54,470:INFO:Copying training dataset
2024-10-17 18:46:54,472:INFO:Defining folds
2024-10-17 18:46:54,472:INFO:Declaring metric variables
2024-10-17 18:46:54,474:INFO:Importing untrained model
2024-10-17 18:46:54,477:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-17 18:46:54,481:INFO:Starting cross validation
2024-10-17 18:46:54,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:55,600:INFO:Calculating mean and std
2024-10-17 18:46:55,601:INFO:Creating metrics dataframe
2024-10-17 18:46:55,602:INFO:Uploading results into container
2024-10-17 18:46:55,603:INFO:Uploading model into container now
2024-10-17 18:46:55,603:INFO:_master_model_container: 17
2024-10-17 18:46:55,603:INFO:_display_container: 2
2024-10-17 18:46:55,603:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:46:55,603:INFO:create_model() successfully completed......................................
2024-10-17 18:46:55,711:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:55,711:INFO:Creating metrics dataframe
2024-10-17 18:46:55,717:INFO:Initializing Dummy Regressor
2024-10-17 18:46:55,717:INFO:Total runtime is 0.16242401599884032 minutes
2024-10-17 18:46:55,719:INFO:SubProcess create_model() called ==================================
2024-10-17 18:46:55,719:INFO:Initializing create_model()
2024-10-17 18:46:55,719:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C78254B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:55,719:INFO:Checking exceptions
2024-10-17 18:46:55,719:INFO:Importing libraries
2024-10-17 18:46:55,719:INFO:Copying training dataset
2024-10-17 18:46:55,721:INFO:Defining folds
2024-10-17 18:46:55,721:INFO:Declaring metric variables
2024-10-17 18:46:55,723:INFO:Importing untrained model
2024-10-17 18:46:55,726:INFO:Dummy Regressor Imported successfully
2024-10-17 18:46:55,729:INFO:Starting cross validation
2024-10-17 18:46:55,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:46:55,818:INFO:Calculating mean and std
2024-10-17 18:46:55,818:INFO:Creating metrics dataframe
2024-10-17 18:46:55,819:INFO:Uploading results into container
2024-10-17 18:46:55,819:INFO:Uploading model into container now
2024-10-17 18:46:55,820:INFO:_master_model_container: 18
2024-10-17 18:46:55,820:INFO:_display_container: 2
2024-10-17 18:46:55,820:INFO:DummyRegressor()
2024-10-17 18:46:55,820:INFO:create_model() successfully completed......................................
2024-10-17 18:46:55,912:INFO:SubProcess create_model() end ==================================
2024-10-17 18:46:55,912:INFO:Creating metrics dataframe
2024-10-17 18:46:55,925:INFO:Initializing create_model()
2024-10-17 18:46:55,925:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=PassiveAggressiveRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:55,925:INFO:Checking exceptions
2024-10-17 18:46:55,926:INFO:Importing libraries
2024-10-17 18:46:55,926:INFO:Copying training dataset
2024-10-17 18:46:55,928:INFO:Defining folds
2024-10-17 18:46:55,928:INFO:Declaring metric variables
2024-10-17 18:46:55,928:INFO:Importing untrained model
2024-10-17 18:46:55,928:INFO:Declaring custom model
2024-10-17 18:46:55,928:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:46:55,929:INFO:Cross validation set to False
2024-10-17 18:46:55,929:INFO:Fitting Model
2024-10-17 18:46:55,959:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:46:55,959:INFO:create_model() successfully completed......................................
2024-10-17 18:46:56,051:INFO:Creating Dashboard logs
2024-10-17 18:46:56,053:INFO:Model: Passive Aggressive Regressor
2024-10-17 18:46:56,080:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:46:56,147:INFO:Initializing predict_model()
2024-10-17 18:46:56,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CFD21EA0>)
2024-10-17 18:46:56,147:INFO:Checking exceptions
2024-10-17 18:46:56,147:INFO:Preloading libraries
2024-10-17 18:46:56,420:INFO:Initializing create_model()
2024-10-17 18:46:56,420:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:56,420:INFO:Checking exceptions
2024-10-17 18:46:56,421:INFO:Importing libraries
2024-10-17 18:46:56,421:INFO:Copying training dataset
2024-10-17 18:46:56,422:INFO:Defining folds
2024-10-17 18:46:56,423:INFO:Declaring metric variables
2024-10-17 18:46:56,423:INFO:Importing untrained model
2024-10-17 18:46:56,423:INFO:Declaring custom model
2024-10-17 18:46:56,423:INFO:Huber Regressor Imported successfully
2024-10-17 18:46:56,424:INFO:Cross validation set to False
2024-10-17 18:46:56,424:INFO:Fitting Model
2024-10-17 18:46:56,452:INFO:HuberRegressor()
2024-10-17 18:46:56,452:INFO:create_model() successfully completed......................................
2024-10-17 18:46:56,544:INFO:Creating Dashboard logs
2024-10-17 18:46:56,546:INFO:Model: Huber Regressor
2024-10-17 18:46:56,569:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-10-17 18:46:56,632:INFO:Initializing predict_model()
2024-10-17 18:46:56,632:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CFD23880>)
2024-10-17 18:46:56,632:INFO:Checking exceptions
2024-10-17 18:46:56,632:INFO:Preloading libraries
2024-10-17 18:46:56,904:INFO:Initializing create_model()
2024-10-17 18:46:56,904:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=Lars(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:46:56,904:INFO:Checking exceptions
2024-10-17 18:46:56,905:INFO:Importing libraries
2024-10-17 18:46:56,905:INFO:Copying training dataset
2024-10-17 18:46:56,907:INFO:Defining folds
2024-10-17 18:46:56,907:INFO:Declaring metric variables
2024-10-17 18:46:56,907:INFO:Importing untrained model
2024-10-17 18:46:56,907:INFO:Declaring custom model
2024-10-17 18:46:56,907:INFO:Least Angle Regression Imported successfully
2024-10-17 18:46:56,908:INFO:Cross validation set to False
2024-10-17 18:46:56,908:INFO:Fitting Model
2024-10-17 18:46:56,936:INFO:Lars(random_state=123)
2024-10-17 18:46:56,936:INFO:create_model() successfully completed......................................
2024-10-17 18:46:57,030:INFO:Creating Dashboard logs
2024-10-17 18:46:57,033:INFO:Model: Least Angle Regression
2024-10-17 18:46:57,057:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:46:57,115:INFO:Initializing predict_model()
2024-10-17 18:46:57,115:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4CF84CF70>, estimator=Lars(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CFD23520>)
2024-10-17 18:46:57,115:INFO:Checking exceptions
2024-10-17 18:46:57,115:INFO:Preloading libraries
2024-10-17 18:46:57,395:INFO:Creating Dashboard logs
2024-10-17 18:46:57,397:INFO:Model: Lasso Regression
2024-10-17 18:46:57,420:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:46:57,594:INFO:Creating Dashboard logs
2024-10-17 18:46:57,596:INFO:Model: Ridge Regression
2024-10-17 18:46:57,619:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-17 18:46:57,793:INFO:Creating Dashboard logs
2024-10-17 18:46:57,794:INFO:Model: Lasso Least Angle Regression
2024-10-17 18:46:57,820:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:46:57,996:INFO:Creating Dashboard logs
2024-10-17 18:46:57,997:INFO:Model: Linear Regression
2024-10-17 18:46:58,023:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-10-17 18:46:58,194:INFO:Creating Dashboard logs
2024-10-17 18:46:58,196:INFO:Model: Bayesian Ridge
2024-10-17 18:46:58,221:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-10-17 18:46:58,395:INFO:Creating Dashboard logs
2024-10-17 18:46:58,397:INFO:Model: Elastic Net
2024-10-17 18:46:58,422:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:46:58,599:INFO:Creating Dashboard logs
2024-10-17 18:46:58,601:INFO:Model: Orthogonal Matching Pursuit
2024-10-17 18:46:58,627:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-10-17 18:46:58,792:INFO:Creating Dashboard logs
2024-10-17 18:46:58,794:INFO:Model: Dummy Regressor
2024-10-17 18:46:58,820:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-10-17 18:46:58,992:INFO:Creating Dashboard logs
2024-10-17 18:46:58,994:INFO:Model: Gradient Boosting Regressor
2024-10-17 18:46:59,016:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:46:59,198:INFO:Creating Dashboard logs
2024-10-17 18:46:59,201:INFO:Model: K Neighbors Regressor
2024-10-17 18:46:59,223:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-17 18:46:59,396:INFO:Creating Dashboard logs
2024-10-17 18:46:59,398:INFO:Model: Light Gradient Boosting Machine
2024-10-17 18:46:59,422:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-17 18:46:59,606:INFO:Creating Dashboard logs
2024-10-17 18:46:59,608:INFO:Model: Extra Trees Regressor
2024-10-17 18:46:59,631:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:46:59,805:INFO:Creating Dashboard logs
2024-10-17 18:46:59,807:INFO:Model: Random Forest Regressor
2024-10-17 18:46:59,830:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:00,020:INFO:Creating Dashboard logs
2024-10-17 18:47:00,022:INFO:Model: Decision Tree Regressor
2024-10-17 18:47:00,053:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-17 18:47:00,239:INFO:Creating Dashboard logs
2024-10-17 18:47:00,241:INFO:Model: AdaBoost Regressor
2024-10-17 18:47:00,265:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 123}
2024-10-17 18:47:00,443:INFO:_master_model_container: 18
2024-10-17 18:47:00,443:INFO:_display_container: 2
2024-10-17 18:47:00,443:INFO:[PassiveAggressiveRegressor(random_state=123), HuberRegressor(), Lars(random_state=123)]
2024-10-17 18:47:00,443:INFO:compare_models() successfully completed......................................
2024-10-17 18:47:08,877:INFO:PyCaret RegressionExperiment
2024-10-17 18:47:08,877:INFO:Logging name: charges_model
2024-10-17 18:47:08,877:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-17 18:47:08,877:INFO:version 3.3.2
2024-10-17 18:47:08,877:INFO:Initializing setup()
2024-10-17 18:47:08,877:INFO:self.USI: 1577
2024-10-17 18:47:08,877:INFO:self._variable_keys: {'seed', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', '_available_plots', 'log_plots_param', 'fold_groups_param', 'idx', 'data', 'fold_generator', 'USI', '_ml_usecase', 'html_param', 'y', 'target_param', 'exp_name_log', 'y_test', 'gpu_param', 'exp_id', 'y_train', 'fold_shuffle_param', 'logging_param', 'X_test', 'memory', 'X_train', 'n_jobs_param'}
2024-10-17 18:47:08,877:INFO:Checking environment
2024-10-17 18:47:08,877:INFO:python_version: 3.10.10
2024-10-17 18:47:08,877:INFO:python_build: ('tags/v3.10.10:aad5f6a', 'Feb  7 2023 17:20:36')
2024-10-17 18:47:08,877:INFO:machine: AMD64
2024-10-17 18:47:08,877:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-17 18:47:08,879:INFO:Memory: svmem(total=34175172608, available=17093185536, percent=50.0, used=17081987072, free=17093185536)
2024-10-17 18:47:08,879:INFO:Physical Core: 16
2024-10-17 18:47:08,879:INFO:Logical Core: 24
2024-10-17 18:47:08,879:INFO:Checking libraries
2024-10-17 18:47:08,879:INFO:System:
2024-10-17 18:47:08,879:INFO:    python: 3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)]
2024-10-17 18:47:08,879:INFO:executable: c:\Users\Anime\Desktop\cientifica\.venv\Scripts\python.exe
2024-10-17 18:47:08,879:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-17 18:47:08,879:INFO:PyCaret required dependencies:
2024-10-17 18:47:08,880:INFO:                 pip: 24.2
2024-10-17 18:47:08,880:INFO:          setuptools: 65.5.0
2024-10-17 18:47:08,880:INFO:             pycaret: 3.3.2
2024-10-17 18:47:08,880:INFO:             IPython: 8.28.0
2024-10-17 18:47:08,880:INFO:          ipywidgets: 8.1.5
2024-10-17 18:47:08,880:INFO:                tqdm: 4.66.5
2024-10-17 18:47:08,880:INFO:               numpy: 1.26.4
2024-10-17 18:47:08,880:INFO:              pandas: 2.1.4
2024-10-17 18:47:08,880:INFO:              jinja2: 3.1.4
2024-10-17 18:47:08,880:INFO:               scipy: 1.11.4
2024-10-17 18:47:08,880:INFO:              joblib: 1.3.2
2024-10-17 18:47:08,880:INFO:             sklearn: 1.4.2
2024-10-17 18:47:08,880:INFO:                pyod: 2.0.2
2024-10-17 18:47:08,880:INFO:            imblearn: 0.12.4
2024-10-17 18:47:08,880:INFO:   category_encoders: 2.6.4
2024-10-17 18:47:08,880:INFO:            lightgbm: 4.5.0
2024-10-17 18:47:08,880:INFO:               numba: 0.60.0
2024-10-17 18:47:08,880:INFO:            requests: 2.32.3
2024-10-17 18:47:08,880:INFO:          matplotlib: 3.7.5
2024-10-17 18:47:08,880:INFO:          scikitplot: 0.3.7
2024-10-17 18:47:08,880:INFO:         yellowbrick: 1.5
2024-10-17 18:47:08,880:INFO:              plotly: 5.24.1
2024-10-17 18:47:08,880:INFO:    plotly-resampler: Not installed
2024-10-17 18:47:08,880:INFO:             kaleido: 0.2.1
2024-10-17 18:47:08,880:INFO:           schemdraw: 0.15
2024-10-17 18:47:08,880:INFO:         statsmodels: 0.14.4
2024-10-17 18:47:08,880:INFO:              sktime: 0.26.0
2024-10-17 18:47:08,880:INFO:               tbats: 1.1.3
2024-10-17 18:47:08,880:INFO:            pmdarima: 2.0.4
2024-10-17 18:47:08,880:INFO:              psutil: 6.0.0
2024-10-17 18:47:08,880:INFO:          markupsafe: 2.1.5
2024-10-17 18:47:08,880:INFO:             pickle5: Not installed
2024-10-17 18:47:08,880:INFO:         cloudpickle: 3.1.0
2024-10-17 18:47:08,880:INFO:         deprecation: 2.1.0
2024-10-17 18:47:08,880:INFO:              xxhash: 3.5.0
2024-10-17 18:47:08,880:INFO:           wurlitzer: Not installed
2024-10-17 18:47:08,880:INFO:PyCaret optional dependencies:
2024-10-17 18:47:08,880:INFO:                shap: Not installed
2024-10-17 18:47:08,880:INFO:           interpret: Not installed
2024-10-17 18:47:08,880:INFO:                umap: Not installed
2024-10-17 18:47:08,880:INFO:     ydata_profiling: 4.11.0
2024-10-17 18:47:08,880:INFO:  explainerdashboard: Not installed
2024-10-17 18:47:08,880:INFO:             autoviz: Not installed
2024-10-17 18:47:08,880:INFO:           fairlearn: Not installed
2024-10-17 18:47:08,880:INFO:          deepchecks: Not installed
2024-10-17 18:47:08,880:INFO:             xgboost: Not installed
2024-10-17 18:47:08,880:INFO:            catboost: Not installed
2024-10-17 18:47:08,880:INFO:              kmodes: Not installed
2024-10-17 18:47:08,880:INFO:             mlxtend: Not installed
2024-10-17 18:47:08,880:INFO:       statsforecast: Not installed
2024-10-17 18:47:08,880:INFO:        tune_sklearn: Not installed
2024-10-17 18:47:08,880:INFO:                 ray: Not installed
2024-10-17 18:47:08,880:INFO:            hyperopt: Not installed
2024-10-17 18:47:08,880:INFO:              optuna: Not installed
2024-10-17 18:47:08,880:INFO:               skopt: Not installed
2024-10-17 18:47:08,880:INFO:              mlflow: 2.17.0
2024-10-17 18:47:08,880:INFO:              gradio: 5.1.0
2024-10-17 18:47:08,880:INFO:             fastapi: 0.115.2
2024-10-17 18:47:08,880:INFO:             uvicorn: 0.32.0
2024-10-17 18:47:08,880:INFO:              m2cgen: Not installed
2024-10-17 18:47:08,880:INFO:           evidently: Not installed
2024-10-17 18:47:08,880:INFO:               fugue: Not installed
2024-10-17 18:47:08,880:INFO:           streamlit: Not installed
2024-10-17 18:47:08,880:INFO:             prophet: Not installed
2024-10-17 18:47:08,880:INFO:None
2024-10-17 18:47:08,881:INFO:Set up data.
2024-10-17 18:47:08,884:INFO:Set up folding strategy.
2024-10-17 18:47:08,884:INFO:Set up train/test split.
2024-10-17 18:47:08,885:INFO:Set up index.
2024-10-17 18:47:08,886:INFO:Assigning column types.
2024-10-17 18:47:08,887:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-17 18:47:08,887:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,889:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,892:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:08,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:08,940:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,942:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,944:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:08,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:08,992:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-17 18:47:08,994:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:08,996:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,022:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,045:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,047:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,072:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,094:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-17 18:47:09,098:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,124:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,149:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,175:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,195:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,196:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-17 18:47:09,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,245:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,275:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,297:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-17 18:47:09,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,379:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:09,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,400:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-17 18:47:09,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,500:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,500:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,501:INFO:Preparing preprocessing pipeline...
2024-10-17 18:47:09,501:INFO:Set up simple imputation.
2024-10-17 18:47:09,503:INFO:Set up encoding of ordinal features.
2024-10-17 18:47:09,503:INFO:Set up encoding of categorical features.
2024-10-17 18:47:09,503:INFO:Set up removing multicollinearity.
2024-10-17 18:47:09,503:INFO:Set up column transformation.
2024-10-17 18:47:09,503:INFO:Set up feature normalization.
2024-10-17 18:47:09,554:INFO:Finished creating preprocessing pipeline.
2024-10-17 18:47:09,565:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:47:09,565:INFO:Creating final display dataframe.
2024-10-17 18:47:09,684:INFO:Setup _display_container:                     Description          Value
0                    Session id           3223
1                        Target        charges
2                   Target type     Regression
3           Original data shape      (1204, 7)
4        Transformed data shape      (1204, 8)
5   Transformed train set shape       (842, 8)
6    Transformed test set shape       (362, 8)
7               Ignore features              2
8              Numeric features              2
9          Categorical features              2
10                   Preprocess           True
11              Imputation type         simple
12           Numeric imputation           mean
13       Categorical imputation           mode
14     Maximum one-hot encoding             25
15              Encoding method           None
16     Remove multicollinearity           True
17  Multicollinearity threshold            0.9
18               Transformation           True
19        Transformation method    yeo-johnson
20                    Normalize           True
21             Normalize method         zscore
22               Fold Generator          KFold
23                  Fold Number             10
24                     CPU Jobs             -1
25                      Use GPU          False
26               Log Experiment   MlflowLogger
27              Experiment Name  charges_model
28                          USI           1577
2024-10-17 18:47:09,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:09,790:INFO:Logging experiment in loggers
2024-10-17 18:47:09,835:INFO:SubProcess save_model() called ==================================
2024-10-17 18:47:09,856:INFO:Initializing save_model()
2024-10-17 18:47:09,856:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), model_name=C:\Users\Anime\AppData\Local\Temp\tmp_nn0p30_\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-17 18:47:09,856:INFO:Adding model into prep_pipe
2024-10-17 18:47:09,856:WARNING:Only Model saved as it was a pipeline.
2024-10-17 18:47:09,859:INFO:C:\Users\Anime\AppData\Local\Temp\tmp_nn0p30_\Transformation Pipeline.pkl saved in current working directory
2024-10-17 18:47:09,870:INFO:Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:47:09,870:INFO:save_model() successfully completed......................................
2024-10-17 18:47:09,963:INFO:SubProcess save_model() end ==================================
2024-10-17 18:47:09,986:INFO:setup() successfully completed in 0.92s...............
2024-10-17 18:47:12,898:INFO:Initializing compare_models()
2024-10-17 18:47:12,898:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-10-17 18:47:12,899:INFO:Checking exceptions
2024-10-17 18:47:12,900:INFO:Preparing display monitor
2024-10-17 18:47:12,913:INFO:Initializing Linear Regression
2024-10-17 18:47:12,913:INFO:Total runtime is 0.0 minutes
2024-10-17 18:47:12,915:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:12,915:INFO:Initializing create_model()
2024-10-17 18:47:12,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:12,916:INFO:Checking exceptions
2024-10-17 18:47:12,916:INFO:Importing libraries
2024-10-17 18:47:12,916:INFO:Copying training dataset
2024-10-17 18:47:12,917:INFO:Defining folds
2024-10-17 18:47:12,917:INFO:Declaring metric variables
2024-10-17 18:47:12,919:INFO:Importing untrained model
2024-10-17 18:47:12,921:INFO:Linear Regression Imported successfully
2024-10-17 18:47:12,925:INFO:Starting cross validation
2024-10-17 18:47:12,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:13,029:INFO:Calculating mean and std
2024-10-17 18:47:13,029:INFO:Creating metrics dataframe
2024-10-17 18:47:13,030:INFO:Uploading results into container
2024-10-17 18:47:13,031:INFO:Uploading model into container now
2024-10-17 18:47:13,031:INFO:_master_model_container: 1
2024-10-17 18:47:13,031:INFO:_display_container: 2
2024-10-17 18:47:13,031:INFO:LinearRegression(n_jobs=-1)
2024-10-17 18:47:13,031:INFO:create_model() successfully completed......................................
2024-10-17 18:47:13,124:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:13,124:INFO:Creating metrics dataframe
2024-10-17 18:47:13,128:INFO:Initializing Lasso Regression
2024-10-17 18:47:13,128:INFO:Total runtime is 0.0035880605379740396 minutes
2024-10-17 18:47:13,129:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:13,130:INFO:Initializing create_model()
2024-10-17 18:47:13,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:13,130:INFO:Checking exceptions
2024-10-17 18:47:13,130:INFO:Importing libraries
2024-10-17 18:47:13,130:INFO:Copying training dataset
2024-10-17 18:47:13,132:INFO:Defining folds
2024-10-17 18:47:13,132:INFO:Declaring metric variables
2024-10-17 18:47:13,134:INFO:Importing untrained model
2024-10-17 18:47:13,135:INFO:Lasso Regression Imported successfully
2024-10-17 18:47:13,139:INFO:Starting cross validation
2024-10-17 18:47:13,140:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:13,195:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.340e+07, tolerance: 1.143e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,197:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.763e+07, tolerance: 1.133e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,200:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.483e+07, tolerance: 1.108e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,203:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.397e+07, tolerance: 1.159e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,207:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.249e+07, tolerance: 1.134e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,209:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.174e+07, tolerance: 1.136e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,211:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.230e+07, tolerance: 1.143e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,220:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.439e+07, tolerance: 1.134e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,226:WARNING:c:\Users\Anime\Desktop\cientifica\.venv\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:678: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.715e+07, tolerance: 1.103e+07
  model = cd_fast.enet_coordinate_descent(

2024-10-17 18:47:13,244:INFO:Calculating mean and std
2024-10-17 18:47:13,244:INFO:Creating metrics dataframe
2024-10-17 18:47:13,245:INFO:Uploading results into container
2024-10-17 18:47:13,246:INFO:Uploading model into container now
2024-10-17 18:47:13,246:INFO:_master_model_container: 2
2024-10-17 18:47:13,246:INFO:_display_container: 2
2024-10-17 18:47:13,246:INFO:Lasso(random_state=3223)
2024-10-17 18:47:13,246:INFO:create_model() successfully completed......................................
2024-10-17 18:47:13,338:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:13,338:INFO:Creating metrics dataframe
2024-10-17 18:47:13,342:INFO:Initializing Ridge Regression
2024-10-17 18:47:13,342:INFO:Total runtime is 0.007156825065612793 minutes
2024-10-17 18:47:13,344:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:13,344:INFO:Initializing create_model()
2024-10-17 18:47:13,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:13,344:INFO:Checking exceptions
2024-10-17 18:47:13,344:INFO:Importing libraries
2024-10-17 18:47:13,344:INFO:Copying training dataset
2024-10-17 18:47:13,346:INFO:Defining folds
2024-10-17 18:47:13,346:INFO:Declaring metric variables
2024-10-17 18:47:13,348:INFO:Importing untrained model
2024-10-17 18:47:13,350:INFO:Ridge Regression Imported successfully
2024-10-17 18:47:13,354:INFO:Starting cross validation
2024-10-17 18:47:13,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:13,459:INFO:Calculating mean and std
2024-10-17 18:47:13,459:INFO:Creating metrics dataframe
2024-10-17 18:47:13,460:INFO:Uploading results into container
2024-10-17 18:47:13,461:INFO:Uploading model into container now
2024-10-17 18:47:13,461:INFO:_master_model_container: 3
2024-10-17 18:47:13,461:INFO:_display_container: 2
2024-10-17 18:47:13,461:INFO:Ridge(random_state=3223)
2024-10-17 18:47:13,461:INFO:create_model() successfully completed......................................
2024-10-17 18:47:13,552:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:13,553:INFO:Creating metrics dataframe
2024-10-17 18:47:13,556:INFO:Initializing Elastic Net
2024-10-17 18:47:13,556:INFO:Total runtime is 0.010720654328664144 minutes
2024-10-17 18:47:13,558:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:13,558:INFO:Initializing create_model()
2024-10-17 18:47:13,558:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:13,558:INFO:Checking exceptions
2024-10-17 18:47:13,559:INFO:Importing libraries
2024-10-17 18:47:13,559:INFO:Copying training dataset
2024-10-17 18:47:13,560:INFO:Defining folds
2024-10-17 18:47:13,560:INFO:Declaring metric variables
2024-10-17 18:47:13,562:INFO:Importing untrained model
2024-10-17 18:47:13,563:INFO:Elastic Net Imported successfully
2024-10-17 18:47:13,566:INFO:Starting cross validation
2024-10-17 18:47:13,568:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:13,659:INFO:Calculating mean and std
2024-10-17 18:47:13,659:INFO:Creating metrics dataframe
2024-10-17 18:47:13,660:INFO:Uploading results into container
2024-10-17 18:47:13,660:INFO:Uploading model into container now
2024-10-17 18:47:13,661:INFO:_master_model_container: 4
2024-10-17 18:47:13,661:INFO:_display_container: 2
2024-10-17 18:47:13,661:INFO:ElasticNet(random_state=3223)
2024-10-17 18:47:13,661:INFO:create_model() successfully completed......................................
2024-10-17 18:47:13,752:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:13,752:INFO:Creating metrics dataframe
2024-10-17 18:47:13,756:INFO:Initializing Least Angle Regression
2024-10-17 18:47:13,756:INFO:Total runtime is 0.014059221744537354 minutes
2024-10-17 18:47:13,758:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:13,758:INFO:Initializing create_model()
2024-10-17 18:47:13,758:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:13,758:INFO:Checking exceptions
2024-10-17 18:47:13,758:INFO:Importing libraries
2024-10-17 18:47:13,758:INFO:Copying training dataset
2024-10-17 18:47:13,760:INFO:Defining folds
2024-10-17 18:47:13,760:INFO:Declaring metric variables
2024-10-17 18:47:13,762:INFO:Importing untrained model
2024-10-17 18:47:13,763:INFO:Least Angle Regression Imported successfully
2024-10-17 18:47:13,767:INFO:Starting cross validation
2024-10-17 18:47:13,768:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:13,858:INFO:Calculating mean and std
2024-10-17 18:47:13,858:INFO:Creating metrics dataframe
2024-10-17 18:47:13,859:INFO:Uploading results into container
2024-10-17 18:47:13,859:INFO:Uploading model into container now
2024-10-17 18:47:13,859:INFO:_master_model_container: 5
2024-10-17 18:47:13,860:INFO:_display_container: 2
2024-10-17 18:47:13,860:INFO:Lars(random_state=3223)
2024-10-17 18:47:13,860:INFO:create_model() successfully completed......................................
2024-10-17 18:47:13,949:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:13,950:INFO:Creating metrics dataframe
2024-10-17 18:47:13,954:INFO:Initializing Lasso Least Angle Regression
2024-10-17 18:47:13,954:INFO:Total runtime is 0.017364831765492757 minutes
2024-10-17 18:47:13,957:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:13,957:INFO:Initializing create_model()
2024-10-17 18:47:13,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:13,957:INFO:Checking exceptions
2024-10-17 18:47:13,957:INFO:Importing libraries
2024-10-17 18:47:13,957:INFO:Copying training dataset
2024-10-17 18:47:13,960:INFO:Defining folds
2024-10-17 18:47:13,960:INFO:Declaring metric variables
2024-10-17 18:47:13,963:INFO:Importing untrained model
2024-10-17 18:47:13,964:INFO:Lasso Least Angle Regression Imported successfully
2024-10-17 18:47:13,968:INFO:Starting cross validation
2024-10-17 18:47:13,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:14,073:INFO:Calculating mean and std
2024-10-17 18:47:14,073:INFO:Creating metrics dataframe
2024-10-17 18:47:14,075:INFO:Uploading results into container
2024-10-17 18:47:14,075:INFO:Uploading model into container now
2024-10-17 18:47:14,075:INFO:_master_model_container: 6
2024-10-17 18:47:14,076:INFO:_display_container: 2
2024-10-17 18:47:14,076:INFO:LassoLars(random_state=3223)
2024-10-17 18:47:14,076:INFO:create_model() successfully completed......................................
2024-10-17 18:47:14,167:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:14,167:INFO:Creating metrics dataframe
2024-10-17 18:47:14,170:INFO:Initializing Orthogonal Matching Pursuit
2024-10-17 18:47:14,170:INFO:Total runtime is 0.02096505562464396 minutes
2024-10-17 18:47:14,172:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:14,172:INFO:Initializing create_model()
2024-10-17 18:47:14,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:14,172:INFO:Checking exceptions
2024-10-17 18:47:14,172:INFO:Importing libraries
2024-10-17 18:47:14,172:INFO:Copying training dataset
2024-10-17 18:47:14,173:INFO:Defining folds
2024-10-17 18:47:14,173:INFO:Declaring metric variables
2024-10-17 18:47:14,175:INFO:Importing untrained model
2024-10-17 18:47:14,177:INFO:Orthogonal Matching Pursuit Imported successfully
2024-10-17 18:47:14,179:INFO:Starting cross validation
2024-10-17 18:47:14,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:14,274:INFO:Calculating mean and std
2024-10-17 18:47:14,275:INFO:Creating metrics dataframe
2024-10-17 18:47:14,276:INFO:Uploading results into container
2024-10-17 18:47:14,276:INFO:Uploading model into container now
2024-10-17 18:47:14,277:INFO:_master_model_container: 7
2024-10-17 18:47:14,277:INFO:_display_container: 2
2024-10-17 18:47:14,277:INFO:OrthogonalMatchingPursuit()
2024-10-17 18:47:14,277:INFO:create_model() successfully completed......................................
2024-10-17 18:47:14,368:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:14,368:INFO:Creating metrics dataframe
2024-10-17 18:47:14,373:INFO:Initializing Bayesian Ridge
2024-10-17 18:47:14,373:INFO:Total runtime is 0.024331923325856528 minutes
2024-10-17 18:47:14,374:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:14,374:INFO:Initializing create_model()
2024-10-17 18:47:14,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:14,374:INFO:Checking exceptions
2024-10-17 18:47:14,374:INFO:Importing libraries
2024-10-17 18:47:14,374:INFO:Copying training dataset
2024-10-17 18:47:14,376:INFO:Defining folds
2024-10-17 18:47:14,376:INFO:Declaring metric variables
2024-10-17 18:47:14,378:INFO:Importing untrained model
2024-10-17 18:47:14,380:INFO:Bayesian Ridge Imported successfully
2024-10-17 18:47:14,384:INFO:Starting cross validation
2024-10-17 18:47:14,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:14,475:INFO:Calculating mean and std
2024-10-17 18:47:14,475:INFO:Creating metrics dataframe
2024-10-17 18:47:14,476:INFO:Uploading results into container
2024-10-17 18:47:14,477:INFO:Uploading model into container now
2024-10-17 18:47:14,477:INFO:_master_model_container: 8
2024-10-17 18:47:14,477:INFO:_display_container: 2
2024-10-17 18:47:14,477:INFO:BayesianRidge()
2024-10-17 18:47:14,477:INFO:create_model() successfully completed......................................
2024-10-17 18:47:14,568:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:14,568:INFO:Creating metrics dataframe
2024-10-17 18:47:14,572:INFO:Initializing Passive Aggressive Regressor
2024-10-17 18:47:14,572:INFO:Total runtime is 0.02765414317448934 minutes
2024-10-17 18:47:14,575:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:14,575:INFO:Initializing create_model()
2024-10-17 18:47:14,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:14,575:INFO:Checking exceptions
2024-10-17 18:47:14,575:INFO:Importing libraries
2024-10-17 18:47:14,575:INFO:Copying training dataset
2024-10-17 18:47:14,578:INFO:Defining folds
2024-10-17 18:47:14,578:INFO:Declaring metric variables
2024-10-17 18:47:14,580:INFO:Importing untrained model
2024-10-17 18:47:14,583:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:47:14,588:INFO:Starting cross validation
2024-10-17 18:47:14,589:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:14,689:INFO:Calculating mean and std
2024-10-17 18:47:14,689:INFO:Creating metrics dataframe
2024-10-17 18:47:14,691:INFO:Uploading results into container
2024-10-17 18:47:14,691:INFO:Uploading model into container now
2024-10-17 18:47:14,691:INFO:_master_model_container: 9
2024-10-17 18:47:14,691:INFO:_display_container: 2
2024-10-17 18:47:14,692:INFO:PassiveAggressiveRegressor(random_state=3223)
2024-10-17 18:47:14,692:INFO:create_model() successfully completed......................................
2024-10-17 18:47:14,782:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:14,782:INFO:Creating metrics dataframe
2024-10-17 18:47:14,786:INFO:Initializing Huber Regressor
2024-10-17 18:47:14,786:INFO:Total runtime is 0.03122820456822713 minutes
2024-10-17 18:47:14,788:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:14,788:INFO:Initializing create_model()
2024-10-17 18:47:14,788:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:14,788:INFO:Checking exceptions
2024-10-17 18:47:14,788:INFO:Importing libraries
2024-10-17 18:47:14,788:INFO:Copying training dataset
2024-10-17 18:47:14,790:INFO:Defining folds
2024-10-17 18:47:14,790:INFO:Declaring metric variables
2024-10-17 18:47:14,792:INFO:Importing untrained model
2024-10-17 18:47:14,793:INFO:Huber Regressor Imported successfully
2024-10-17 18:47:14,796:INFO:Starting cross validation
2024-10-17 18:47:14,797:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:14,904:INFO:Calculating mean and std
2024-10-17 18:47:14,905:INFO:Creating metrics dataframe
2024-10-17 18:47:14,906:INFO:Uploading results into container
2024-10-17 18:47:14,906:INFO:Uploading model into container now
2024-10-17 18:47:14,906:INFO:_master_model_container: 10
2024-10-17 18:47:14,906:INFO:_display_container: 2
2024-10-17 18:47:14,907:INFO:HuberRegressor()
2024-10-17 18:47:14,907:INFO:create_model() successfully completed......................................
2024-10-17 18:47:14,999:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:14,999:INFO:Creating metrics dataframe
2024-10-17 18:47:15,004:INFO:Initializing K Neighbors Regressor
2024-10-17 18:47:15,004:INFO:Total runtime is 0.03486024141311645 minutes
2024-10-17 18:47:15,006:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:15,006:INFO:Initializing create_model()
2024-10-17 18:47:15,006:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:15,006:INFO:Checking exceptions
2024-10-17 18:47:15,006:INFO:Importing libraries
2024-10-17 18:47:15,006:INFO:Copying training dataset
2024-10-17 18:47:15,008:INFO:Defining folds
2024-10-17 18:47:15,008:INFO:Declaring metric variables
2024-10-17 18:47:15,010:INFO:Importing untrained model
2024-10-17 18:47:15,012:INFO:K Neighbors Regressor Imported successfully
2024-10-17 18:47:15,015:INFO:Starting cross validation
2024-10-17 18:47:15,016:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:15,146:INFO:Calculating mean and std
2024-10-17 18:47:15,147:INFO:Creating metrics dataframe
2024-10-17 18:47:15,149:INFO:Uploading results into container
2024-10-17 18:47:15,149:INFO:Uploading model into container now
2024-10-17 18:47:15,150:INFO:_master_model_container: 11
2024-10-17 18:47:15,150:INFO:_display_container: 2
2024-10-17 18:47:15,150:INFO:KNeighborsRegressor(n_jobs=-1)
2024-10-17 18:47:15,150:INFO:create_model() successfully completed......................................
2024-10-17 18:47:15,243:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:15,243:INFO:Creating metrics dataframe
2024-10-17 18:47:15,248:INFO:Initializing Decision Tree Regressor
2024-10-17 18:47:15,248:INFO:Total runtime is 0.038931405544281004 minutes
2024-10-17 18:47:15,250:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:15,250:INFO:Initializing create_model()
2024-10-17 18:47:15,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:15,251:INFO:Checking exceptions
2024-10-17 18:47:15,251:INFO:Importing libraries
2024-10-17 18:47:15,251:INFO:Copying training dataset
2024-10-17 18:47:15,253:INFO:Defining folds
2024-10-17 18:47:15,253:INFO:Declaring metric variables
2024-10-17 18:47:15,255:INFO:Importing untrained model
2024-10-17 18:47:15,257:INFO:Decision Tree Regressor Imported successfully
2024-10-17 18:47:15,261:INFO:Starting cross validation
2024-10-17 18:47:15,262:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:15,359:INFO:Calculating mean and std
2024-10-17 18:47:15,360:INFO:Creating metrics dataframe
2024-10-17 18:47:15,361:INFO:Uploading results into container
2024-10-17 18:47:15,361:INFO:Uploading model into container now
2024-10-17 18:47:15,362:INFO:_master_model_container: 12
2024-10-17 18:47:15,362:INFO:_display_container: 2
2024-10-17 18:47:15,362:INFO:DecisionTreeRegressor(random_state=3223)
2024-10-17 18:47:15,362:INFO:create_model() successfully completed......................................
2024-10-17 18:47:15,454:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:15,454:INFO:Creating metrics dataframe
2024-10-17 18:47:15,459:INFO:Initializing Random Forest Regressor
2024-10-17 18:47:15,459:INFO:Total runtime is 0.04243689775466919 minutes
2024-10-17 18:47:15,461:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:15,461:INFO:Initializing create_model()
2024-10-17 18:47:15,461:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:15,461:INFO:Checking exceptions
2024-10-17 18:47:15,461:INFO:Importing libraries
2024-10-17 18:47:15,461:INFO:Copying training dataset
2024-10-17 18:47:15,463:INFO:Defining folds
2024-10-17 18:47:15,464:INFO:Declaring metric variables
2024-10-17 18:47:15,466:INFO:Importing untrained model
2024-10-17 18:47:15,468:INFO:Random Forest Regressor Imported successfully
2024-10-17 18:47:15,472:INFO:Starting cross validation
2024-10-17 18:47:15,472:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:15,743:INFO:Calculating mean and std
2024-10-17 18:47:15,744:INFO:Creating metrics dataframe
2024-10-17 18:47:15,745:INFO:Uploading results into container
2024-10-17 18:47:15,745:INFO:Uploading model into container now
2024-10-17 18:47:15,745:INFO:_master_model_container: 13
2024-10-17 18:47:15,746:INFO:_display_container: 2
2024-10-17 18:47:15,746:INFO:RandomForestRegressor(n_jobs=-1, random_state=3223)
2024-10-17 18:47:15,746:INFO:create_model() successfully completed......................................
2024-10-17 18:47:15,844:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:15,845:INFO:Creating metrics dataframe
2024-10-17 18:47:15,849:INFO:Initializing Extra Trees Regressor
2024-10-17 18:47:15,849:INFO:Total runtime is 0.04894368648529053 minutes
2024-10-17 18:47:15,851:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:15,851:INFO:Initializing create_model()
2024-10-17 18:47:15,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:15,852:INFO:Checking exceptions
2024-10-17 18:47:15,852:INFO:Importing libraries
2024-10-17 18:47:15,852:INFO:Copying training dataset
2024-10-17 18:47:15,854:INFO:Defining folds
2024-10-17 18:47:15,854:INFO:Declaring metric variables
2024-10-17 18:47:15,856:INFO:Importing untrained model
2024-10-17 18:47:15,857:INFO:Extra Trees Regressor Imported successfully
2024-10-17 18:47:15,861:INFO:Starting cross validation
2024-10-17 18:47:15,861:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:16,065:INFO:Calculating mean and std
2024-10-17 18:47:16,066:INFO:Creating metrics dataframe
2024-10-17 18:47:16,067:INFO:Uploading results into container
2024-10-17 18:47:16,067:INFO:Uploading model into container now
2024-10-17 18:47:16,067:INFO:_master_model_container: 14
2024-10-17 18:47:16,068:INFO:_display_container: 2
2024-10-17 18:47:16,068:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3223)
2024-10-17 18:47:16,068:INFO:create_model() successfully completed......................................
2024-10-17 18:47:16,157:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:16,157:INFO:Creating metrics dataframe
2024-10-17 18:47:16,162:INFO:Initializing AdaBoost Regressor
2024-10-17 18:47:16,162:INFO:Total runtime is 0.05416096846262614 minutes
2024-10-17 18:47:16,164:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:16,165:INFO:Initializing create_model()
2024-10-17 18:47:16,165:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:16,165:INFO:Checking exceptions
2024-10-17 18:47:16,165:INFO:Importing libraries
2024-10-17 18:47:16,165:INFO:Copying training dataset
2024-10-17 18:47:16,167:INFO:Defining folds
2024-10-17 18:47:16,167:INFO:Declaring metric variables
2024-10-17 18:47:16,170:INFO:Importing untrained model
2024-10-17 18:47:16,172:INFO:AdaBoost Regressor Imported successfully
2024-10-17 18:47:16,175:INFO:Starting cross validation
2024-10-17 18:47:16,177:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:16,292:INFO:Calculating mean and std
2024-10-17 18:47:16,293:INFO:Creating metrics dataframe
2024-10-17 18:47:16,294:INFO:Uploading results into container
2024-10-17 18:47:16,294:INFO:Uploading model into container now
2024-10-17 18:47:16,294:INFO:_master_model_container: 15
2024-10-17 18:47:16,295:INFO:_display_container: 2
2024-10-17 18:47:16,295:INFO:AdaBoostRegressor(random_state=3223)
2024-10-17 18:47:16,295:INFO:create_model() successfully completed......................................
2024-10-17 18:47:16,386:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:16,386:INFO:Creating metrics dataframe
2024-10-17 18:47:16,391:INFO:Initializing Gradient Boosting Regressor
2024-10-17 18:47:16,391:INFO:Total runtime is 0.05798151890436808 minutes
2024-10-17 18:47:16,393:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:16,393:INFO:Initializing create_model()
2024-10-17 18:47:16,394:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:16,394:INFO:Checking exceptions
2024-10-17 18:47:16,394:INFO:Importing libraries
2024-10-17 18:47:16,394:INFO:Copying training dataset
2024-10-17 18:47:16,396:INFO:Defining folds
2024-10-17 18:47:16,396:INFO:Declaring metric variables
2024-10-17 18:47:16,398:INFO:Importing untrained model
2024-10-17 18:47:16,400:INFO:Gradient Boosting Regressor Imported successfully
2024-10-17 18:47:16,403:INFO:Starting cross validation
2024-10-17 18:47:16,404:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:16,551:INFO:Calculating mean and std
2024-10-17 18:47:16,552:INFO:Creating metrics dataframe
2024-10-17 18:47:16,553:INFO:Uploading results into container
2024-10-17 18:47:16,553:INFO:Uploading model into container now
2024-10-17 18:47:16,553:INFO:_master_model_container: 16
2024-10-17 18:47:16,554:INFO:_display_container: 2
2024-10-17 18:47:16,554:INFO:GradientBoostingRegressor(random_state=3223)
2024-10-17 18:47:16,554:INFO:create_model() successfully completed......................................
2024-10-17 18:47:16,645:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:16,645:INFO:Creating metrics dataframe
2024-10-17 18:47:16,650:INFO:Initializing Light Gradient Boosting Machine
2024-10-17 18:47:16,650:INFO:Total runtime is 0.06228379408518473 minutes
2024-10-17 18:47:16,653:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:16,653:INFO:Initializing create_model()
2024-10-17 18:47:16,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:16,653:INFO:Checking exceptions
2024-10-17 18:47:16,653:INFO:Importing libraries
2024-10-17 18:47:16,653:INFO:Copying training dataset
2024-10-17 18:47:16,655:INFO:Defining folds
2024-10-17 18:47:16,656:INFO:Declaring metric variables
2024-10-17 18:47:16,658:INFO:Importing untrained model
2024-10-17 18:47:16,662:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-17 18:47:16,668:INFO:Starting cross validation
2024-10-17 18:47:16,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:17,746:INFO:Calculating mean and std
2024-10-17 18:47:17,747:INFO:Creating metrics dataframe
2024-10-17 18:47:17,749:INFO:Uploading results into container
2024-10-17 18:47:17,749:INFO:Uploading model into container now
2024-10-17 18:47:17,750:INFO:_master_model_container: 17
2024-10-17 18:47:17,750:INFO:_display_container: 2
2024-10-17 18:47:17,750:INFO:LGBMRegressor(n_jobs=-1, random_state=3223)
2024-10-17 18:47:17,750:INFO:create_model() successfully completed......................................
2024-10-17 18:47:17,859:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:17,860:INFO:Creating metrics dataframe
2024-10-17 18:47:17,865:INFO:Initializing Dummy Regressor
2024-10-17 18:47:17,865:INFO:Total runtime is 0.08253302574157714 minutes
2024-10-17 18:47:17,867:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:17,867:INFO:Initializing create_model()
2024-10-17 18:47:17,867:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C327FD00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:17,867:INFO:Checking exceptions
2024-10-17 18:47:17,867:INFO:Importing libraries
2024-10-17 18:47:17,867:INFO:Copying training dataset
2024-10-17 18:47:17,869:INFO:Defining folds
2024-10-17 18:47:17,869:INFO:Declaring metric variables
2024-10-17 18:47:17,871:INFO:Importing untrained model
2024-10-17 18:47:17,873:INFO:Dummy Regressor Imported successfully
2024-10-17 18:47:17,876:INFO:Starting cross validation
2024-10-17 18:47:17,877:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:17,973:INFO:Calculating mean and std
2024-10-17 18:47:17,974:INFO:Creating metrics dataframe
2024-10-17 18:47:17,975:INFO:Uploading results into container
2024-10-17 18:47:17,975:INFO:Uploading model into container now
2024-10-17 18:47:17,976:INFO:_master_model_container: 18
2024-10-17 18:47:17,976:INFO:_display_container: 2
2024-10-17 18:47:17,976:INFO:DummyRegressor()
2024-10-17 18:47:17,976:INFO:create_model() successfully completed......................................
2024-10-17 18:47:18,073:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:18,073:INFO:Creating metrics dataframe
2024-10-17 18:47:18,083:INFO:Initializing create_model()
2024-10-17 18:47:18,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=PassiveAggressiveRegressor(random_state=3223), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:18,084:INFO:Checking exceptions
2024-10-17 18:47:18,085:INFO:Importing libraries
2024-10-17 18:47:18,085:INFO:Copying training dataset
2024-10-17 18:47:18,086:INFO:Defining folds
2024-10-17 18:47:18,086:INFO:Declaring metric variables
2024-10-17 18:47:18,086:INFO:Importing untrained model
2024-10-17 18:47:18,086:INFO:Declaring custom model
2024-10-17 18:47:18,086:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:47:18,087:INFO:Cross validation set to False
2024-10-17 18:47:18,087:INFO:Fitting Model
2024-10-17 18:47:18,120:INFO:PassiveAggressiveRegressor(random_state=3223)
2024-10-17 18:47:18,120:INFO:create_model() successfully completed......................................
2024-10-17 18:47:18,213:INFO:Creating Dashboard logs
2024-10-17 18:47:18,216:INFO:Model: Passive Aggressive Regressor
2024-10-17 18:47:18,244:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 3223, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:18,309:INFO:Initializing predict_model()
2024-10-17 18:47:18,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=PassiveAggressiveRegressor(random_state=3223), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CF83AA70>)
2024-10-17 18:47:18,310:INFO:Checking exceptions
2024-10-17 18:47:18,310:INFO:Preloading libraries
2024-10-17 18:47:18,586:INFO:Initializing create_model()
2024-10-17 18:47:18,587:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:18,587:INFO:Checking exceptions
2024-10-17 18:47:18,588:INFO:Importing libraries
2024-10-17 18:47:18,588:INFO:Copying training dataset
2024-10-17 18:47:18,589:INFO:Defining folds
2024-10-17 18:47:18,589:INFO:Declaring metric variables
2024-10-17 18:47:18,589:INFO:Importing untrained model
2024-10-17 18:47:18,589:INFO:Declaring custom model
2024-10-17 18:47:18,589:INFO:Huber Regressor Imported successfully
2024-10-17 18:47:18,590:INFO:Cross validation set to False
2024-10-17 18:47:18,590:INFO:Fitting Model
2024-10-17 18:47:18,620:INFO:HuberRegressor()
2024-10-17 18:47:18,621:INFO:create_model() successfully completed......................................
2024-10-17 18:47:18,711:INFO:Creating Dashboard logs
2024-10-17 18:47:18,713:INFO:Model: Huber Regressor
2024-10-17 18:47:18,740:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-10-17 18:47:18,803:INFO:Initializing predict_model()
2024-10-17 18:47:18,803:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CF83B1C0>)
2024-10-17 18:47:18,803:INFO:Checking exceptions
2024-10-17 18:47:18,803:INFO:Preloading libraries
2024-10-17 18:47:19,083:INFO:Initializing create_model()
2024-10-17 18:47:19,083:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=KNeighborsRegressor(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:19,083:INFO:Checking exceptions
2024-10-17 18:47:19,084:INFO:Importing libraries
2024-10-17 18:47:19,084:INFO:Copying training dataset
2024-10-17 18:47:19,086:INFO:Defining folds
2024-10-17 18:47:19,086:INFO:Declaring metric variables
2024-10-17 18:47:19,086:INFO:Importing untrained model
2024-10-17 18:47:19,086:INFO:Declaring custom model
2024-10-17 18:47:19,086:INFO:K Neighbors Regressor Imported successfully
2024-10-17 18:47:19,087:INFO:Cross validation set to False
2024-10-17 18:47:19,087:INFO:Fitting Model
2024-10-17 18:47:19,116:INFO:KNeighborsRegressor(n_jobs=-1)
2024-10-17 18:47:19,116:INFO:create_model() successfully completed......................................
2024-10-17 18:47:19,210:INFO:Creating Dashboard logs
2024-10-17 18:47:19,213:INFO:Model: K Neighbors Regressor
2024-10-17 18:47:19,249:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-17 18:47:19,310:INFO:Initializing predict_model()
2024-10-17 18:47:19,310:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C97E2110>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CF839B40>)
2024-10-17 18:47:19,310:INFO:Checking exceptions
2024-10-17 18:47:19,310:INFO:Preloading libraries
2024-10-17 18:47:19,616:INFO:Creating Dashboard logs
2024-10-17 18:47:19,618:INFO:Model: Ridge Regression
2024-10-17 18:47:19,642:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 3223, 'solver': 'auto', 'tol': 0.0001}
2024-10-17 18:47:19,825:INFO:Creating Dashboard logs
2024-10-17 18:47:19,827:INFO:Model: Least Angle Regression
2024-10-17 18:47:19,853:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 3223, 'verbose': False}
2024-10-17 18:47:20,033:INFO:Creating Dashboard logs
2024-10-17 18:47:20,035:INFO:Model: Lasso Regression
2024-10-17 18:47:20,062:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3223, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:47:20,243:INFO:Creating Dashboard logs
2024-10-17 18:47:20,245:INFO:Model: Lasso Least Angle Regression
2024-10-17 18:47:20,268:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 3223, 'verbose': False}
2024-10-17 18:47:20,447:INFO:Creating Dashboard logs
2024-10-17 18:47:20,449:INFO:Model: Linear Regression
2024-10-17 18:47:20,473:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-10-17 18:47:20,651:INFO:Creating Dashboard logs
2024-10-17 18:47:20,653:INFO:Model: Bayesian Ridge
2024-10-17 18:47:20,680:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-10-17 18:47:20,864:INFO:Creating Dashboard logs
2024-10-17 18:47:20,866:INFO:Model: Elastic Net
2024-10-17 18:47:20,889:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 3223, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:47:21,069:INFO:Creating Dashboard logs
2024-10-17 18:47:21,071:INFO:Model: Gradient Boosting Regressor
2024-10-17 18:47:21,094:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 3223, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:21,280:INFO:Creating Dashboard logs
2024-10-17 18:47:21,282:INFO:Model: Orthogonal Matching Pursuit
2024-10-17 18:47:21,309:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-10-17 18:47:21,491:INFO:Creating Dashboard logs
2024-10-17 18:47:21,493:INFO:Model: Dummy Regressor
2024-10-17 18:47:21,519:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-10-17 18:47:21,692:INFO:Creating Dashboard logs
2024-10-17 18:47:21,694:INFO:Model: Light Gradient Boosting Machine
2024-10-17 18:47:21,720:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 3223, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-17 18:47:21,922:INFO:Creating Dashboard logs
2024-10-17 18:47:21,924:INFO:Model: Random Forest Regressor
2024-10-17 18:47:21,948:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3223, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:22,133:INFO:Creating Dashboard logs
2024-10-17 18:47:22,135:INFO:Model: Extra Trees Regressor
2024-10-17 18:47:22,161:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 3223, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:22,357:INFO:Creating Dashboard logs
2024-10-17 18:47:22,359:INFO:Model: Decision Tree Regressor
2024-10-17 18:47:22,384:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3223, 'splitter': 'best'}
2024-10-17 18:47:22,577:INFO:Creating Dashboard logs
2024-10-17 18:47:22,579:INFO:Model: AdaBoost Regressor
2024-10-17 18:47:22,604:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 3223}
2024-10-17 18:47:22,786:INFO:_master_model_container: 18
2024-10-17 18:47:22,787:INFO:_display_container: 2
2024-10-17 18:47:22,787:INFO:[PassiveAggressiveRegressor(random_state=3223), HuberRegressor(), KNeighborsRegressor(n_jobs=-1)]
2024-10-17 18:47:22,787:INFO:compare_models() successfully completed......................................
2024-10-17 18:47:32,690:INFO:PyCaret RegressionExperiment
2024-10-17 18:47:32,690:INFO:Logging name: charges_model
2024-10-17 18:47:32,690:INFO:ML Usecase: MLUsecase.REGRESSION
2024-10-17 18:47:32,690:INFO:version 3.3.2
2024-10-17 18:47:32,690:INFO:Initializing setup()
2024-10-17 18:47:32,690:INFO:self.USI: 7928
2024-10-17 18:47:32,691:INFO:self._variable_keys: {'seed', 'X', 'gpu_n_jobs_param', 'transform_target_param', 'pipeline', '_available_plots', 'log_plots_param', 'fold_groups_param', 'idx', 'data', 'fold_generator', 'USI', '_ml_usecase', 'html_param', 'y', 'target_param', 'exp_name_log', 'y_test', 'gpu_param', 'exp_id', 'y_train', 'fold_shuffle_param', 'logging_param', 'X_test', 'memory', 'X_train', 'n_jobs_param'}
2024-10-17 18:47:32,691:INFO:Checking environment
2024-10-17 18:47:32,691:INFO:python_version: 3.10.10
2024-10-17 18:47:32,691:INFO:python_build: ('tags/v3.10.10:aad5f6a', 'Feb  7 2023 17:20:36')
2024-10-17 18:47:32,691:INFO:machine: AMD64
2024-10-17 18:47:32,691:INFO:platform: Windows-10-10.0.19045-SP0
2024-10-17 18:47:32,693:INFO:Memory: svmem(total=34175172608, available=17106038784, percent=49.9, used=17069133824, free=17106038784)
2024-10-17 18:47:32,693:INFO:Physical Core: 16
2024-10-17 18:47:32,694:INFO:Logical Core: 24
2024-10-17 18:47:32,694:INFO:Checking libraries
2024-10-17 18:47:32,694:INFO:System:
2024-10-17 18:47:32,694:INFO:    python: 3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)]
2024-10-17 18:47:32,694:INFO:executable: c:\Users\Anime\Desktop\cientifica\.venv\Scripts\python.exe
2024-10-17 18:47:32,694:INFO:   machine: Windows-10-10.0.19045-SP0
2024-10-17 18:47:32,694:INFO:PyCaret required dependencies:
2024-10-17 18:47:32,694:INFO:                 pip: 24.2
2024-10-17 18:47:32,694:INFO:          setuptools: 65.5.0
2024-10-17 18:47:32,694:INFO:             pycaret: 3.3.2
2024-10-17 18:47:32,694:INFO:             IPython: 8.28.0
2024-10-17 18:47:32,694:INFO:          ipywidgets: 8.1.5
2024-10-17 18:47:32,694:INFO:                tqdm: 4.66.5
2024-10-17 18:47:32,694:INFO:               numpy: 1.26.4
2024-10-17 18:47:32,694:INFO:              pandas: 2.1.4
2024-10-17 18:47:32,694:INFO:              jinja2: 3.1.4
2024-10-17 18:47:32,694:INFO:               scipy: 1.11.4
2024-10-17 18:47:32,694:INFO:              joblib: 1.3.2
2024-10-17 18:47:32,694:INFO:             sklearn: 1.4.2
2024-10-17 18:47:32,694:INFO:                pyod: 2.0.2
2024-10-17 18:47:32,694:INFO:            imblearn: 0.12.4
2024-10-17 18:47:32,694:INFO:   category_encoders: 2.6.4
2024-10-17 18:47:32,694:INFO:            lightgbm: 4.5.0
2024-10-17 18:47:32,694:INFO:               numba: 0.60.0
2024-10-17 18:47:32,694:INFO:            requests: 2.32.3
2024-10-17 18:47:32,694:INFO:          matplotlib: 3.7.5
2024-10-17 18:47:32,694:INFO:          scikitplot: 0.3.7
2024-10-17 18:47:32,694:INFO:         yellowbrick: 1.5
2024-10-17 18:47:32,694:INFO:              plotly: 5.24.1
2024-10-17 18:47:32,694:INFO:    plotly-resampler: Not installed
2024-10-17 18:47:32,694:INFO:             kaleido: 0.2.1
2024-10-17 18:47:32,694:INFO:           schemdraw: 0.15
2024-10-17 18:47:32,694:INFO:         statsmodels: 0.14.4
2024-10-17 18:47:32,694:INFO:              sktime: 0.26.0
2024-10-17 18:47:32,694:INFO:               tbats: 1.1.3
2024-10-17 18:47:32,694:INFO:            pmdarima: 2.0.4
2024-10-17 18:47:32,695:INFO:              psutil: 6.0.0
2024-10-17 18:47:32,695:INFO:          markupsafe: 2.1.5
2024-10-17 18:47:32,695:INFO:             pickle5: Not installed
2024-10-17 18:47:32,695:INFO:         cloudpickle: 3.1.0
2024-10-17 18:47:32,695:INFO:         deprecation: 2.1.0
2024-10-17 18:47:32,695:INFO:              xxhash: 3.5.0
2024-10-17 18:47:32,695:INFO:           wurlitzer: Not installed
2024-10-17 18:47:32,695:INFO:PyCaret optional dependencies:
2024-10-17 18:47:32,695:INFO:                shap: Not installed
2024-10-17 18:47:32,695:INFO:           interpret: Not installed
2024-10-17 18:47:32,695:INFO:                umap: Not installed
2024-10-17 18:47:32,695:INFO:     ydata_profiling: 4.11.0
2024-10-17 18:47:32,695:INFO:  explainerdashboard: Not installed
2024-10-17 18:47:32,695:INFO:             autoviz: Not installed
2024-10-17 18:47:32,695:INFO:           fairlearn: Not installed
2024-10-17 18:47:32,695:INFO:          deepchecks: Not installed
2024-10-17 18:47:32,695:INFO:             xgboost: Not installed
2024-10-17 18:47:32,695:INFO:            catboost: Not installed
2024-10-17 18:47:32,695:INFO:              kmodes: Not installed
2024-10-17 18:47:32,695:INFO:             mlxtend: Not installed
2024-10-17 18:47:32,695:INFO:       statsforecast: Not installed
2024-10-17 18:47:32,695:INFO:        tune_sklearn: Not installed
2024-10-17 18:47:32,695:INFO:                 ray: Not installed
2024-10-17 18:47:32,695:INFO:            hyperopt: Not installed
2024-10-17 18:47:32,695:INFO:              optuna: Not installed
2024-10-17 18:47:32,695:INFO:               skopt: Not installed
2024-10-17 18:47:32,695:INFO:              mlflow: 2.17.0
2024-10-17 18:47:32,695:INFO:              gradio: 5.1.0
2024-10-17 18:47:32,695:INFO:             fastapi: 0.115.2
2024-10-17 18:47:32,695:INFO:             uvicorn: 0.32.0
2024-10-17 18:47:32,695:INFO:              m2cgen: Not installed
2024-10-17 18:47:32,695:INFO:           evidently: Not installed
2024-10-17 18:47:32,695:INFO:               fugue: Not installed
2024-10-17 18:47:32,695:INFO:           streamlit: Not installed
2024-10-17 18:47:32,695:INFO:             prophet: Not installed
2024-10-17 18:47:32,695:INFO:None
2024-10-17 18:47:32,695:INFO:Set up data.
2024-10-17 18:47:32,698:INFO:Set up folding strategy.
2024-10-17 18:47:32,698:INFO:Set up train/test split.
2024-10-17 18:47:32,700:INFO:Set up index.
2024-10-17 18:47:32,700:INFO:Assigning column types.
2024-10-17 18:47:32,701:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-10-17 18:47:32,701:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,703:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,705:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,752:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,753:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,753:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,755:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,757:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,783:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,803:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,804:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-10-17 18:47:32,806:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,808:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,834:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,854:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,854:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,854:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,856:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,858:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,884:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,904:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,905:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-10-17 18:47:32,909:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,954:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:32,958:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-10-17 18:47:32,984:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,004:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-10-17 18:47:33,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,054:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,104:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,105:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,105:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-10-17 18:47:33,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-10-17 18:47:33,204:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,205:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-10-17 18:47:33,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,305:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,306:INFO:Preparing preprocessing pipeline...
2024-10-17 18:47:33,306:INFO:Set up simple imputation.
2024-10-17 18:47:33,307:INFO:Set up encoding of ordinal features.
2024-10-17 18:47:33,308:INFO:Set up encoding of categorical features.
2024-10-17 18:47:33,308:INFO:Set up removing multicollinearity.
2024-10-17 18:47:33,308:INFO:Set up column transformation.
2024-10-17 18:47:33,308:INFO:Set up feature normalization.
2024-10-17 18:47:33,367:INFO:Finished creating preprocessing pipeline.
2024-10-17 18:47:33,382:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:47:33,382:INFO:Creating final display dataframe.
2024-10-17 18:47:33,502:INFO:Setup _display_container:                     Description          Value
0                    Session id            123
1                        Target        charges
2                   Target type     Regression
3           Original data shape      (1204, 7)
4        Transformed data shape     (1204, 10)
5   Transformed train set shape      (842, 10)
6    Transformed test set shape      (362, 10)
7              Numeric features              3
8          Categorical features              3
9                    Preprocess           True
10              Imputation type         simple
11           Numeric imputation           mean
12       Categorical imputation           mode
13     Maximum one-hot encoding             25
14              Encoding method           None
15     Remove multicollinearity           True
16  Multicollinearity threshold            0.9
17               Transformation           True
18        Transformation method    yeo-johnson
19                    Normalize           True
20             Normalize method         zscore
21               Fold Generator          KFold
22                  Fold Number             10
23                     CPU Jobs             -1
24                      Use GPU          False
25               Log Experiment   MlflowLogger
26              Experiment Name  charges_model
27                          USI           7928
2024-10-17 18:47:33,557:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-10-17 18:47:33,609:INFO:Logging experiment in loggers
2024-10-17 18:47:33,651:INFO:SubProcess save_model() called ==================================
2024-10-17 18:47:33,680:INFO:Initializing save_model()
2024-10-17 18:47:33,680:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), model_name=C:\Users\Anime\AppData\Local\Temp\tmpy45ivtoi\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))]), verbose=False, use_case=MLUsecase.REGRESSION, kwargs={})
2024-10-17 18:47:33,680:INFO:Adding model into prep_pipe
2024-10-17 18:47:33,680:WARNING:Only Model saved as it was a pipeline.
2024-10-17 18:47:33,683:INFO:C:\Users\Anime\AppData\Local\Temp\tmpy45ivtoi\Transformation Pipeline.pkl saved in current working directory
2024-10-17 18:47:33,698:INFO:Pipeline(memory=FastMemory(location=C:\Users\Anime\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('transformation',
                 TransformerWrapper(transformer=PowerTransformer(standardize=False))),
                ('normalize',
                 TransformerWrapper(transformer=StandardScaler()))])
2024-10-17 18:47:33,698:INFO:save_model() successfully completed......................................
2024-10-17 18:47:33,790:INFO:SubProcess save_model() end ==================================
2024-10-17 18:47:33,820:INFO:setup() successfully completed in 0.92s...............
2024-10-17 18:47:36,066:INFO:Initializing compare_models()
2024-10-17 18:47:36,066:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-10-17 18:47:36,066:INFO:Checking exceptions
2024-10-17 18:47:36,067:INFO:Preparing display monitor
2024-10-17 18:47:36,079:INFO:Initializing Linear Regression
2024-10-17 18:47:36,079:INFO:Total runtime is 0.0 minutes
2024-10-17 18:47:36,081:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:36,081:INFO:Initializing create_model()
2024-10-17 18:47:36,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:36,082:INFO:Checking exceptions
2024-10-17 18:47:36,082:INFO:Importing libraries
2024-10-17 18:47:36,082:INFO:Copying training dataset
2024-10-17 18:47:36,083:INFO:Defining folds
2024-10-17 18:47:36,083:INFO:Declaring metric variables
2024-10-17 18:47:36,085:INFO:Importing untrained model
2024-10-17 18:47:36,087:INFO:Linear Regression Imported successfully
2024-10-17 18:47:36,091:INFO:Starting cross validation
2024-10-17 18:47:36,092:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:36,192:INFO:Calculating mean and std
2024-10-17 18:47:36,192:INFO:Creating metrics dataframe
2024-10-17 18:47:36,193:INFO:Uploading results into container
2024-10-17 18:47:36,194:INFO:Uploading model into container now
2024-10-17 18:47:36,194:INFO:_master_model_container: 1
2024-10-17 18:47:36,194:INFO:_display_container: 2
2024-10-17 18:47:36,194:INFO:LinearRegression(n_jobs=-1)
2024-10-17 18:47:36,194:INFO:create_model() successfully completed......................................
2024-10-17 18:47:36,301:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:36,301:INFO:Creating metrics dataframe
2024-10-17 18:47:36,304:INFO:Initializing Lasso Regression
2024-10-17 18:47:36,304:INFO:Total runtime is 0.003754111131032308 minutes
2024-10-17 18:47:36,307:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:36,307:INFO:Initializing create_model()
2024-10-17 18:47:36,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:36,307:INFO:Checking exceptions
2024-10-17 18:47:36,307:INFO:Importing libraries
2024-10-17 18:47:36,307:INFO:Copying training dataset
2024-10-17 18:47:36,309:INFO:Defining folds
2024-10-17 18:47:36,309:INFO:Declaring metric variables
2024-10-17 18:47:36,310:INFO:Importing untrained model
2024-10-17 18:47:36,312:INFO:Lasso Regression Imported successfully
2024-10-17 18:47:36,316:INFO:Starting cross validation
2024-10-17 18:47:36,317:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:36,423:INFO:Calculating mean and std
2024-10-17 18:47:36,423:INFO:Creating metrics dataframe
2024-10-17 18:47:36,424:INFO:Uploading results into container
2024-10-17 18:47:36,424:INFO:Uploading model into container now
2024-10-17 18:47:36,425:INFO:_master_model_container: 2
2024-10-17 18:47:36,425:INFO:_display_container: 2
2024-10-17 18:47:36,425:INFO:Lasso(random_state=123)
2024-10-17 18:47:36,425:INFO:create_model() successfully completed......................................
2024-10-17 18:47:36,514:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:36,514:INFO:Creating metrics dataframe
2024-10-17 18:47:36,517:INFO:Initializing Ridge Regression
2024-10-17 18:47:36,517:INFO:Total runtime is 0.007308884461720785 minutes
2024-10-17 18:47:36,519:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:36,520:INFO:Initializing create_model()
2024-10-17 18:47:36,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:36,520:INFO:Checking exceptions
2024-10-17 18:47:36,520:INFO:Importing libraries
2024-10-17 18:47:36,520:INFO:Copying training dataset
2024-10-17 18:47:36,521:INFO:Defining folds
2024-10-17 18:47:36,521:INFO:Declaring metric variables
2024-10-17 18:47:36,523:INFO:Importing untrained model
2024-10-17 18:47:36,525:INFO:Ridge Regression Imported successfully
2024-10-17 18:47:36,529:INFO:Starting cross validation
2024-10-17 18:47:36,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:36,639:INFO:Calculating mean and std
2024-10-17 18:47:36,639:INFO:Creating metrics dataframe
2024-10-17 18:47:36,640:INFO:Uploading results into container
2024-10-17 18:47:36,640:INFO:Uploading model into container now
2024-10-17 18:47:36,641:INFO:_master_model_container: 3
2024-10-17 18:47:36,641:INFO:_display_container: 2
2024-10-17 18:47:36,641:INFO:Ridge(random_state=123)
2024-10-17 18:47:36,641:INFO:create_model() successfully completed......................................
2024-10-17 18:47:36,734:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:36,734:INFO:Creating metrics dataframe
2024-10-17 18:47:36,738:INFO:Initializing Elastic Net
2024-10-17 18:47:36,738:INFO:Total runtime is 0.010988907019297282 minutes
2024-10-17 18:47:36,739:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:36,739:INFO:Initializing create_model()
2024-10-17 18:47:36,739:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:36,740:INFO:Checking exceptions
2024-10-17 18:47:36,740:INFO:Importing libraries
2024-10-17 18:47:36,740:INFO:Copying training dataset
2024-10-17 18:47:36,741:INFO:Defining folds
2024-10-17 18:47:36,741:INFO:Declaring metric variables
2024-10-17 18:47:36,743:INFO:Importing untrained model
2024-10-17 18:47:36,744:INFO:Elastic Net Imported successfully
2024-10-17 18:47:36,748:INFO:Starting cross validation
2024-10-17 18:47:36,749:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:36,857:INFO:Calculating mean and std
2024-10-17 18:47:36,857:INFO:Creating metrics dataframe
2024-10-17 18:47:36,858:INFO:Uploading results into container
2024-10-17 18:47:36,858:INFO:Uploading model into container now
2024-10-17 18:47:36,859:INFO:_master_model_container: 4
2024-10-17 18:47:36,859:INFO:_display_container: 2
2024-10-17 18:47:36,859:INFO:ElasticNet(random_state=123)
2024-10-17 18:47:36,859:INFO:create_model() successfully completed......................................
2024-10-17 18:47:36,949:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:36,949:INFO:Creating metrics dataframe
2024-10-17 18:47:36,952:INFO:Initializing Least Angle Regression
2024-10-17 18:47:36,953:INFO:Total runtime is 0.014577933152516683 minutes
2024-10-17 18:47:36,954:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:36,955:INFO:Initializing create_model()
2024-10-17 18:47:36,955:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:36,955:INFO:Checking exceptions
2024-10-17 18:47:36,955:INFO:Importing libraries
2024-10-17 18:47:36,955:INFO:Copying training dataset
2024-10-17 18:47:36,957:INFO:Defining folds
2024-10-17 18:47:36,957:INFO:Declaring metric variables
2024-10-17 18:47:36,958:INFO:Importing untrained model
2024-10-17 18:47:36,961:INFO:Least Angle Regression Imported successfully
2024-10-17 18:47:36,965:INFO:Starting cross validation
2024-10-17 18:47:36,966:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:37,070:INFO:Calculating mean and std
2024-10-17 18:47:37,070:INFO:Creating metrics dataframe
2024-10-17 18:47:37,071:INFO:Uploading results into container
2024-10-17 18:47:37,072:INFO:Uploading model into container now
2024-10-17 18:47:37,072:INFO:_master_model_container: 5
2024-10-17 18:47:37,072:INFO:_display_container: 2
2024-10-17 18:47:37,072:INFO:Lars(random_state=123)
2024-10-17 18:47:37,072:INFO:create_model() successfully completed......................................
2024-10-17 18:47:37,166:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:37,166:INFO:Creating metrics dataframe
2024-10-17 18:47:37,170:INFO:Initializing Lasso Least Angle Regression
2024-10-17 18:47:37,170:INFO:Total runtime is 0.018187832832336426 minutes
2024-10-17 18:47:37,172:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:37,173:INFO:Initializing create_model()
2024-10-17 18:47:37,173:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:37,173:INFO:Checking exceptions
2024-10-17 18:47:37,173:INFO:Importing libraries
2024-10-17 18:47:37,173:INFO:Copying training dataset
2024-10-17 18:47:37,175:INFO:Defining folds
2024-10-17 18:47:37,175:INFO:Declaring metric variables
2024-10-17 18:47:37,177:INFO:Importing untrained model
2024-10-17 18:47:37,181:INFO:Lasso Least Angle Regression Imported successfully
2024-10-17 18:47:37,184:INFO:Starting cross validation
2024-10-17 18:47:37,185:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:37,284:INFO:Calculating mean and std
2024-10-17 18:47:37,284:INFO:Creating metrics dataframe
2024-10-17 18:47:37,286:INFO:Uploading results into container
2024-10-17 18:47:37,286:INFO:Uploading model into container now
2024-10-17 18:47:37,286:INFO:_master_model_container: 6
2024-10-17 18:47:37,287:INFO:_display_container: 2
2024-10-17 18:47:37,287:INFO:LassoLars(random_state=123)
2024-10-17 18:47:37,287:INFO:create_model() successfully completed......................................
2024-10-17 18:47:37,383:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:37,384:INFO:Creating metrics dataframe
2024-10-17 18:47:37,388:INFO:Initializing Orthogonal Matching Pursuit
2024-10-17 18:47:37,388:INFO:Total runtime is 0.021825671195983887 minutes
2024-10-17 18:47:37,389:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:37,390:INFO:Initializing create_model()
2024-10-17 18:47:37,390:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:37,390:INFO:Checking exceptions
2024-10-17 18:47:37,390:INFO:Importing libraries
2024-10-17 18:47:37,390:INFO:Copying training dataset
2024-10-17 18:47:37,392:INFO:Defining folds
2024-10-17 18:47:37,392:INFO:Declaring metric variables
2024-10-17 18:47:37,394:INFO:Importing untrained model
2024-10-17 18:47:37,396:INFO:Orthogonal Matching Pursuit Imported successfully
2024-10-17 18:47:37,399:INFO:Starting cross validation
2024-10-17 18:47:37,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:37,498:INFO:Calculating mean and std
2024-10-17 18:47:37,499:INFO:Creating metrics dataframe
2024-10-17 18:47:37,500:INFO:Uploading results into container
2024-10-17 18:47:37,500:INFO:Uploading model into container now
2024-10-17 18:47:37,501:INFO:_master_model_container: 7
2024-10-17 18:47:37,501:INFO:_display_container: 2
2024-10-17 18:47:37,501:INFO:OrthogonalMatchingPursuit()
2024-10-17 18:47:37,501:INFO:create_model() successfully completed......................................
2024-10-17 18:47:37,591:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:37,591:INFO:Creating metrics dataframe
2024-10-17 18:47:37,595:INFO:Initializing Bayesian Ridge
2024-10-17 18:47:37,595:INFO:Total runtime is 0.025264163812001545 minutes
2024-10-17 18:47:37,597:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:37,597:INFO:Initializing create_model()
2024-10-17 18:47:37,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:37,597:INFO:Checking exceptions
2024-10-17 18:47:37,597:INFO:Importing libraries
2024-10-17 18:47:37,597:INFO:Copying training dataset
2024-10-17 18:47:37,600:INFO:Defining folds
2024-10-17 18:47:37,600:INFO:Declaring metric variables
2024-10-17 18:47:37,602:INFO:Importing untrained model
2024-10-17 18:47:37,604:INFO:Bayesian Ridge Imported successfully
2024-10-17 18:47:37,606:INFO:Starting cross validation
2024-10-17 18:47:37,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:37,715:INFO:Calculating mean and std
2024-10-17 18:47:37,716:INFO:Creating metrics dataframe
2024-10-17 18:47:37,717:INFO:Uploading results into container
2024-10-17 18:47:37,717:INFO:Uploading model into container now
2024-10-17 18:47:37,717:INFO:_master_model_container: 8
2024-10-17 18:47:37,717:INFO:_display_container: 2
2024-10-17 18:47:37,718:INFO:BayesianRidge()
2024-10-17 18:47:37,718:INFO:create_model() successfully completed......................................
2024-10-17 18:47:37,808:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:37,808:INFO:Creating metrics dataframe
2024-10-17 18:47:37,812:INFO:Initializing Passive Aggressive Regressor
2024-10-17 18:47:37,812:INFO:Total runtime is 0.028896617889404296 minutes
2024-10-17 18:47:37,814:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:37,814:INFO:Initializing create_model()
2024-10-17 18:47:37,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:37,814:INFO:Checking exceptions
2024-10-17 18:47:37,814:INFO:Importing libraries
2024-10-17 18:47:37,814:INFO:Copying training dataset
2024-10-17 18:47:37,817:INFO:Defining folds
2024-10-17 18:47:37,817:INFO:Declaring metric variables
2024-10-17 18:47:37,819:INFO:Importing untrained model
2024-10-17 18:47:37,821:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:47:37,825:INFO:Starting cross validation
2024-10-17 18:47:37,826:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:37,942:INFO:Calculating mean and std
2024-10-17 18:47:37,943:INFO:Creating metrics dataframe
2024-10-17 18:47:37,944:INFO:Uploading results into container
2024-10-17 18:47:37,944:INFO:Uploading model into container now
2024-10-17 18:47:37,944:INFO:_master_model_container: 9
2024-10-17 18:47:37,944:INFO:_display_container: 2
2024-10-17 18:47:37,945:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:47:37,945:INFO:create_model() successfully completed......................................
2024-10-17 18:47:38,036:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:38,036:INFO:Creating metrics dataframe
2024-10-17 18:47:38,041:INFO:Initializing Huber Regressor
2024-10-17 18:47:38,041:INFO:Total runtime is 0.03271071116129557 minutes
2024-10-17 18:47:38,043:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:38,043:INFO:Initializing create_model()
2024-10-17 18:47:38,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:38,043:INFO:Checking exceptions
2024-10-17 18:47:38,043:INFO:Importing libraries
2024-10-17 18:47:38,043:INFO:Copying training dataset
2024-10-17 18:47:38,046:INFO:Defining folds
2024-10-17 18:47:38,046:INFO:Declaring metric variables
2024-10-17 18:47:38,048:INFO:Importing untrained model
2024-10-17 18:47:38,050:INFO:Huber Regressor Imported successfully
2024-10-17 18:47:38,054:INFO:Starting cross validation
2024-10-17 18:47:38,055:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:38,176:INFO:Calculating mean and std
2024-10-17 18:47:38,177:INFO:Creating metrics dataframe
2024-10-17 18:47:38,178:INFO:Uploading results into container
2024-10-17 18:47:38,179:INFO:Uploading model into container now
2024-10-17 18:47:38,179:INFO:_master_model_container: 10
2024-10-17 18:47:38,179:INFO:_display_container: 2
2024-10-17 18:47:38,180:INFO:HuberRegressor()
2024-10-17 18:47:38,180:INFO:create_model() successfully completed......................................
2024-10-17 18:47:38,270:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:38,270:INFO:Creating metrics dataframe
2024-10-17 18:47:38,274:INFO:Initializing K Neighbors Regressor
2024-10-17 18:47:38,274:INFO:Total runtime is 0.03659269412358602 minutes
2024-10-17 18:47:38,276:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:38,277:INFO:Initializing create_model()
2024-10-17 18:47:38,277:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:38,277:INFO:Checking exceptions
2024-10-17 18:47:38,277:INFO:Importing libraries
2024-10-17 18:47:38,277:INFO:Copying training dataset
2024-10-17 18:47:38,279:INFO:Defining folds
2024-10-17 18:47:38,279:INFO:Declaring metric variables
2024-10-17 18:47:38,282:INFO:Importing untrained model
2024-10-17 18:47:38,285:INFO:K Neighbors Regressor Imported successfully
2024-10-17 18:47:38,289:INFO:Starting cross validation
2024-10-17 18:47:38,289:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:38,433:INFO:Calculating mean and std
2024-10-17 18:47:38,434:INFO:Creating metrics dataframe
2024-10-17 18:47:38,435:INFO:Uploading results into container
2024-10-17 18:47:38,435:INFO:Uploading model into container now
2024-10-17 18:47:38,436:INFO:_master_model_container: 11
2024-10-17 18:47:38,436:INFO:_display_container: 2
2024-10-17 18:47:38,436:INFO:KNeighborsRegressor(n_jobs=-1)
2024-10-17 18:47:38,436:INFO:create_model() successfully completed......................................
2024-10-17 18:47:38,527:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:38,527:INFO:Creating metrics dataframe
2024-10-17 18:47:38,532:INFO:Initializing Decision Tree Regressor
2024-10-17 18:47:38,532:INFO:Total runtime is 0.040888655185699466 minutes
2024-10-17 18:47:38,534:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:38,534:INFO:Initializing create_model()
2024-10-17 18:47:38,534:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:38,534:INFO:Checking exceptions
2024-10-17 18:47:38,534:INFO:Importing libraries
2024-10-17 18:47:38,534:INFO:Copying training dataset
2024-10-17 18:47:38,536:INFO:Defining folds
2024-10-17 18:47:38,536:INFO:Declaring metric variables
2024-10-17 18:47:38,538:INFO:Importing untrained model
2024-10-17 18:47:38,540:INFO:Decision Tree Regressor Imported successfully
2024-10-17 18:47:38,544:INFO:Starting cross validation
2024-10-17 18:47:38,546:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:38,647:INFO:Calculating mean and std
2024-10-17 18:47:38,648:INFO:Creating metrics dataframe
2024-10-17 18:47:38,649:INFO:Uploading results into container
2024-10-17 18:47:38,649:INFO:Uploading model into container now
2024-10-17 18:47:38,649:INFO:_master_model_container: 12
2024-10-17 18:47:38,650:INFO:_display_container: 2
2024-10-17 18:47:38,650:INFO:DecisionTreeRegressor(random_state=123)
2024-10-17 18:47:38,650:INFO:create_model() successfully completed......................................
2024-10-17 18:47:38,741:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:38,742:INFO:Creating metrics dataframe
2024-10-17 18:47:38,746:INFO:Initializing Random Forest Regressor
2024-10-17 18:47:38,746:INFO:Total runtime is 0.0444496750831604 minutes
2024-10-17 18:47:38,748:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:38,748:INFO:Initializing create_model()
2024-10-17 18:47:38,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:38,749:INFO:Checking exceptions
2024-10-17 18:47:38,749:INFO:Importing libraries
2024-10-17 18:47:38,749:INFO:Copying training dataset
2024-10-17 18:47:38,751:INFO:Defining folds
2024-10-17 18:47:38,751:INFO:Declaring metric variables
2024-10-17 18:47:38,754:INFO:Importing untrained model
2024-10-17 18:47:38,756:INFO:Random Forest Regressor Imported successfully
2024-10-17 18:47:38,759:INFO:Starting cross validation
2024-10-17 18:47:38,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:39,049:INFO:Calculating mean and std
2024-10-17 18:47:39,050:INFO:Creating metrics dataframe
2024-10-17 18:47:39,051:INFO:Uploading results into container
2024-10-17 18:47:39,052:INFO:Uploading model into container now
2024-10-17 18:47:39,052:INFO:_master_model_container: 13
2024-10-17 18:47:39,053:INFO:_display_container: 2
2024-10-17 18:47:39,053:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:47:39,053:INFO:create_model() successfully completed......................................
2024-10-17 18:47:39,152:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:39,152:INFO:Creating metrics dataframe
2024-10-17 18:47:39,157:INFO:Initializing Extra Trees Regressor
2024-10-17 18:47:39,157:INFO:Total runtime is 0.05131032864252726 minutes
2024-10-17 18:47:39,159:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:39,159:INFO:Initializing create_model()
2024-10-17 18:47:39,159:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:39,159:INFO:Checking exceptions
2024-10-17 18:47:39,159:INFO:Importing libraries
2024-10-17 18:47:39,160:INFO:Copying training dataset
2024-10-17 18:47:39,162:INFO:Defining folds
2024-10-17 18:47:39,162:INFO:Declaring metric variables
2024-10-17 18:47:39,164:INFO:Importing untrained model
2024-10-17 18:47:39,167:INFO:Extra Trees Regressor Imported successfully
2024-10-17 18:47:39,171:INFO:Starting cross validation
2024-10-17 18:47:39,173:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:39,416:INFO:Calculating mean and std
2024-10-17 18:47:39,417:INFO:Creating metrics dataframe
2024-10-17 18:47:39,418:INFO:Uploading results into container
2024-10-17 18:47:39,418:INFO:Uploading model into container now
2024-10-17 18:47:39,419:INFO:_master_model_container: 14
2024-10-17 18:47:39,419:INFO:_display_container: 2
2024-10-17 18:47:39,419:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:47:39,419:INFO:create_model() successfully completed......................................
2024-10-17 18:47:39,511:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:39,511:INFO:Creating metrics dataframe
2024-10-17 18:47:39,516:INFO:Initializing AdaBoost Regressor
2024-10-17 18:47:39,516:INFO:Total runtime is 0.057291658719380696 minutes
2024-10-17 18:47:39,518:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:39,519:INFO:Initializing create_model()
2024-10-17 18:47:39,519:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:39,519:INFO:Checking exceptions
2024-10-17 18:47:39,519:INFO:Importing libraries
2024-10-17 18:47:39,519:INFO:Copying training dataset
2024-10-17 18:47:39,521:INFO:Defining folds
2024-10-17 18:47:39,521:INFO:Declaring metric variables
2024-10-17 18:47:39,524:INFO:Importing untrained model
2024-10-17 18:47:39,526:INFO:AdaBoost Regressor Imported successfully
2024-10-17 18:47:39,529:INFO:Starting cross validation
2024-10-17 18:47:39,530:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:39,660:INFO:Calculating mean and std
2024-10-17 18:47:39,661:INFO:Creating metrics dataframe
2024-10-17 18:47:39,662:INFO:Uploading results into container
2024-10-17 18:47:39,662:INFO:Uploading model into container now
2024-10-17 18:47:39,663:INFO:_master_model_container: 15
2024-10-17 18:47:39,663:INFO:_display_container: 2
2024-10-17 18:47:39,663:INFO:AdaBoostRegressor(random_state=123)
2024-10-17 18:47:39,663:INFO:create_model() successfully completed......................................
2024-10-17 18:47:39,757:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:39,757:INFO:Creating metrics dataframe
2024-10-17 18:47:39,762:INFO:Initializing Gradient Boosting Regressor
2024-10-17 18:47:39,762:INFO:Total runtime is 0.06139494180679321 minutes
2024-10-17 18:47:39,764:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:39,765:INFO:Initializing create_model()
2024-10-17 18:47:39,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:39,765:INFO:Checking exceptions
2024-10-17 18:47:39,765:INFO:Importing libraries
2024-10-17 18:47:39,765:INFO:Copying training dataset
2024-10-17 18:47:39,767:INFO:Defining folds
2024-10-17 18:47:39,767:INFO:Declaring metric variables
2024-10-17 18:47:39,769:INFO:Importing untrained model
2024-10-17 18:47:39,771:INFO:Gradient Boosting Regressor Imported successfully
2024-10-17 18:47:39,775:INFO:Starting cross validation
2024-10-17 18:47:39,777:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:39,936:INFO:Calculating mean and std
2024-10-17 18:47:39,937:INFO:Creating metrics dataframe
2024-10-17 18:47:39,938:INFO:Uploading results into container
2024-10-17 18:47:39,938:INFO:Uploading model into container now
2024-10-17 18:47:39,938:INFO:_master_model_container: 16
2024-10-17 18:47:39,938:INFO:_display_container: 2
2024-10-17 18:47:39,939:INFO:GradientBoostingRegressor(random_state=123)
2024-10-17 18:47:39,939:INFO:create_model() successfully completed......................................
2024-10-17 18:47:40,030:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:40,030:INFO:Creating metrics dataframe
2024-10-17 18:47:40,035:INFO:Initializing Light Gradient Boosting Machine
2024-10-17 18:47:40,035:INFO:Total runtime is 0.06594637235005696 minutes
2024-10-17 18:47:40,037:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:40,037:INFO:Initializing create_model()
2024-10-17 18:47:40,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:40,038:INFO:Checking exceptions
2024-10-17 18:47:40,038:INFO:Importing libraries
2024-10-17 18:47:40,038:INFO:Copying training dataset
2024-10-17 18:47:40,040:INFO:Defining folds
2024-10-17 18:47:40,040:INFO:Declaring metric variables
2024-10-17 18:47:40,042:INFO:Importing untrained model
2024-10-17 18:47:40,044:INFO:Light Gradient Boosting Machine Imported successfully
2024-10-17 18:47:40,050:INFO:Starting cross validation
2024-10-17 18:47:40,052:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:41,212:INFO:Calculating mean and std
2024-10-17 18:47:41,213:INFO:Creating metrics dataframe
2024-10-17 18:47:41,215:INFO:Uploading results into container
2024-10-17 18:47:41,215:INFO:Uploading model into container now
2024-10-17 18:47:41,216:INFO:_master_model_container: 17
2024-10-17 18:47:41,216:INFO:_display_container: 2
2024-10-17 18:47:41,216:INFO:LGBMRegressor(n_jobs=-1, random_state=123)
2024-10-17 18:47:41,216:INFO:create_model() successfully completed......................................
2024-10-17 18:47:41,330:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:41,330:INFO:Creating metrics dataframe
2024-10-17 18:47:41,336:INFO:Initializing Dummy Regressor
2024-10-17 18:47:41,336:INFO:Total runtime is 0.08761598666508992 minutes
2024-10-17 18:47:41,338:INFO:SubProcess create_model() called ==================================
2024-10-17 18:47:41,338:INFO:Initializing create_model()
2024-10-17 18:47:41,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002A4C97F8DC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:41,338:INFO:Checking exceptions
2024-10-17 18:47:41,338:INFO:Importing libraries
2024-10-17 18:47:41,338:INFO:Copying training dataset
2024-10-17 18:47:41,340:INFO:Defining folds
2024-10-17 18:47:41,340:INFO:Declaring metric variables
2024-10-17 18:47:41,342:INFO:Importing untrained model
2024-10-17 18:47:41,343:INFO:Dummy Regressor Imported successfully
2024-10-17 18:47:41,346:INFO:Starting cross validation
2024-10-17 18:47:41,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-10-17 18:47:41,457:INFO:Calculating mean and std
2024-10-17 18:47:41,458:INFO:Creating metrics dataframe
2024-10-17 18:47:41,459:INFO:Uploading results into container
2024-10-17 18:47:41,460:INFO:Uploading model into container now
2024-10-17 18:47:41,460:INFO:_master_model_container: 18
2024-10-17 18:47:41,460:INFO:_display_container: 2
2024-10-17 18:47:41,460:INFO:DummyRegressor()
2024-10-17 18:47:41,460:INFO:create_model() successfully completed......................................
2024-10-17 18:47:41,551:INFO:SubProcess create_model() end ==================================
2024-10-17 18:47:41,551:INFO:Creating metrics dataframe
2024-10-17 18:47:41,561:INFO:Initializing create_model()
2024-10-17 18:47:41,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=PassiveAggressiveRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:41,562:INFO:Checking exceptions
2024-10-17 18:47:41,563:INFO:Importing libraries
2024-10-17 18:47:41,563:INFO:Copying training dataset
2024-10-17 18:47:41,565:INFO:Defining folds
2024-10-17 18:47:41,565:INFO:Declaring metric variables
2024-10-17 18:47:41,565:INFO:Importing untrained model
2024-10-17 18:47:41,565:INFO:Declaring custom model
2024-10-17 18:47:41,565:INFO:Passive Aggressive Regressor Imported successfully
2024-10-17 18:47:41,566:INFO:Cross validation set to False
2024-10-17 18:47:41,566:INFO:Fitting Model
2024-10-17 18:47:41,607:INFO:PassiveAggressiveRegressor(random_state=123)
2024-10-17 18:47:41,607:INFO:create_model() successfully completed......................................
2024-10-17 18:47:41,700:INFO:Creating Dashboard logs
2024-10-17 18:47:41,702:INFO:Model: Passive Aggressive Regressor
2024-10-17 18:47:41,729:INFO:Logged params: {'C': 1.0, 'average': False, 'early_stopping': False, 'epsilon': 0.1, 'fit_intercept': True, 'loss': 'epsilon_insensitive', 'max_iter': 1000, 'n_iter_no_change': 5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:41,796:INFO:Initializing predict_model()
2024-10-17 18:47:41,796:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CF83BA30>)
2024-10-17 18:47:41,796:INFO:Checking exceptions
2024-10-17 18:47:41,796:INFO:Preloading libraries
2024-10-17 18:47:42,077:INFO:Initializing create_model()
2024-10-17 18:47:42,077:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=HuberRegressor(), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:42,077:INFO:Checking exceptions
2024-10-17 18:47:42,078:INFO:Importing libraries
2024-10-17 18:47:42,078:INFO:Copying training dataset
2024-10-17 18:47:42,080:INFO:Defining folds
2024-10-17 18:47:42,080:INFO:Declaring metric variables
2024-10-17 18:47:42,080:INFO:Importing untrained model
2024-10-17 18:47:42,080:INFO:Declaring custom model
2024-10-17 18:47:42,080:INFO:Huber Regressor Imported successfully
2024-10-17 18:47:42,081:INFO:Cross validation set to False
2024-10-17 18:47:42,081:INFO:Fitting Model
2024-10-17 18:47:42,117:INFO:HuberRegressor()
2024-10-17 18:47:42,117:INFO:create_model() successfully completed......................................
2024-10-17 18:47:42,212:INFO:Creating Dashboard logs
2024-10-17 18:47:42,215:INFO:Model: Huber Regressor
2024-10-17 18:47:42,239:INFO:Logged params: {'alpha': 0.0001, 'epsilon': 1.35, 'fit_intercept': True, 'max_iter': 100, 'tol': 1e-05, 'warm_start': False}
2024-10-17 18:47:42,300:INFO:Initializing predict_model()
2024-10-17 18:47:42,300:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=HuberRegressor(), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CBF76170>)
2024-10-17 18:47:42,300:INFO:Checking exceptions
2024-10-17 18:47:42,300:INFO:Preloading libraries
2024-10-17 18:47:42,581:INFO:Initializing create_model()
2024-10-17 18:47:42,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=GradientBoostingRegressor(random_state=123), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-10-17 18:47:42,581:INFO:Checking exceptions
2024-10-17 18:47:42,582:INFO:Importing libraries
2024-10-17 18:47:42,582:INFO:Copying training dataset
2024-10-17 18:47:42,584:INFO:Defining folds
2024-10-17 18:47:42,584:INFO:Declaring metric variables
2024-10-17 18:47:42,584:INFO:Importing untrained model
2024-10-17 18:47:42,584:INFO:Declaring custom model
2024-10-17 18:47:42,584:INFO:Gradient Boosting Regressor Imported successfully
2024-10-17 18:47:42,585:INFO:Cross validation set to False
2024-10-17 18:47:42,585:INFO:Fitting Model
2024-10-17 18:47:42,674:INFO:GradientBoostingRegressor(random_state=123)
2024-10-17 18:47:42,674:INFO:create_model() successfully completed......................................
2024-10-17 18:47:42,769:INFO:Creating Dashboard logs
2024-10-17 18:47:42,771:INFO:Model: Gradient Boosting Regressor
2024-10-17 18:47:42,797:INFO:Logged params: {'alpha': 0.9, 'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'squared_error', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:42,875:INFO:Initializing predict_model()
2024-10-17 18:47:42,875:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4C9B9CB20>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4CBF74430>)
2024-10-17 18:47:42,875:INFO:Checking exceptions
2024-10-17 18:47:42,875:INFO:Preloading libraries
2024-10-17 18:47:43,156:INFO:Creating Dashboard logs
2024-10-17 18:47:43,158:INFO:Model: Extra Trees Regressor
2024-10-17 18:47:43,182:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:43,369:INFO:Creating Dashboard logs
2024-10-17 18:47:43,371:INFO:Model: Random Forest Regressor
2024-10-17 18:47:43,397:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': 1.0, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2024-10-17 18:47:43,579:INFO:Creating Dashboard logs
2024-10-17 18:47:43,581:INFO:Model: Decision Tree Regressor
2024-10-17 18:47:43,605:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'squared_error', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 123, 'splitter': 'best'}
2024-10-17 18:47:43,785:INFO:Creating Dashboard logs
2024-10-17 18:47:43,787:INFO:Model: Light Gradient Boosting Machine
2024-10-17 18:47:43,810:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2024-10-17 18:47:43,998:INFO:Creating Dashboard logs
2024-10-17 18:47:44,000:INFO:Model: K Neighbors Regressor
2024-10-17 18:47:44,026:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2024-10-17 18:47:44,214:INFO:Creating Dashboard logs
2024-10-17 18:47:44,216:INFO:Model: Lasso Least Angle Regression
2024-10-17 18:47:44,238:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'max_iter': 500, 'positive': False, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:47:44,421:INFO:Creating Dashboard logs
2024-10-17 18:47:44,423:INFO:Model: Lasso Regression
2024-10-17 18:47:44,447:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:47:44,631:INFO:Creating Dashboard logs
2024-10-17 18:47:44,633:INFO:Model: Ridge Regression
2024-10-17 18:47:44,660:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2024-10-17 18:47:44,840:INFO:Creating Dashboard logs
2024-10-17 18:47:44,842:INFO:Model: Bayesian Ridge
2024-10-17 18:47:44,869:INFO:Logged params: {'alpha_1': 1e-06, 'alpha_2': 1e-06, 'alpha_init': None, 'compute_score': False, 'copy_X': True, 'fit_intercept': True, 'lambda_1': 1e-06, 'lambda_2': 1e-06, 'lambda_init': None, 'max_iter': None, 'n_iter': 'deprecated', 'tol': 0.001, 'verbose': False}
2024-10-17 18:47:45,052:INFO:Creating Dashboard logs
2024-10-17 18:47:45,054:INFO:Model: Linear Regression
2024-10-17 18:47:45,080:INFO:Logged params: {'copy_X': True, 'fit_intercept': True, 'n_jobs': -1, 'positive': False}
2024-10-17 18:47:45,257:INFO:Creating Dashboard logs
2024-10-17 18:47:45,259:INFO:Model: Least Angle Regression
2024-10-17 18:47:45,284:INFO:Logged params: {'copy_X': True, 'eps': 2.220446049250313e-16, 'fit_intercept': True, 'fit_path': True, 'jitter': None, 'n_nonzero_coefs': 500, 'precompute': 'auto', 'random_state': 123, 'verbose': False}
2024-10-17 18:47:45,468:INFO:Creating Dashboard logs
2024-10-17 18:47:45,470:INFO:Model: Elastic Net
2024-10-17 18:47:45,494:INFO:Logged params: {'alpha': 1.0, 'copy_X': True, 'fit_intercept': True, 'l1_ratio': 0.5, 'max_iter': 1000, 'positive': False, 'precompute': False, 'random_state': 123, 'selection': 'cyclic', 'tol': 0.0001, 'warm_start': False}
2024-10-17 18:47:45,681:INFO:Creating Dashboard logs
2024-10-17 18:47:45,683:INFO:Model: AdaBoost Regressor
2024-10-17 18:47:45,708:INFO:Logged params: {'estimator': None, 'learning_rate': 1.0, 'loss': 'linear', 'n_estimators': 50, 'random_state': 123}
2024-10-17 18:47:45,885:INFO:Creating Dashboard logs
2024-10-17 18:47:45,886:INFO:Model: Orthogonal Matching Pursuit
2024-10-17 18:47:45,912:INFO:Logged params: {'fit_intercept': True, 'n_nonzero_coefs': None, 'precompute': 'auto', 'tol': None}
2024-10-17 18:47:46,090:INFO:Creating Dashboard logs
2024-10-17 18:47:46,092:INFO:Model: Dummy Regressor
2024-10-17 18:47:46,118:INFO:Logged params: {'constant': None, 'quantile': None, 'strategy': 'mean'}
2024-10-17 18:47:46,312:INFO:_master_model_container: 18
2024-10-17 18:47:46,312:INFO:_display_container: 2
2024-10-17 18:47:46,313:INFO:[PassiveAggressiveRegressor(random_state=123), HuberRegressor(), GradientBoostingRegressor(random_state=123)]
2024-10-17 18:47:46,313:INFO:compare_models() successfully completed......................................
